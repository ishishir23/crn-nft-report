/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 280.0, "minX": 0.0, "maxY": 54867.0, "series": [{"data": [[0.0, 280.0], [0.1, 416.0], [0.2, 442.0], [0.3, 461.0], [0.4, 476.0], [0.5, 484.0], [0.6, 493.0], [0.7, 502.0], [0.8, 509.0], [0.9, 515.0], [1.0, 523.0], [1.1, 528.0], [1.2, 533.0], [1.3, 538.0], [1.4, 541.0], [1.5, 546.0], [1.6, 550.0], [1.7, 554.0], [1.8, 557.0], [1.9, 560.0], [2.0, 563.0], [2.1, 567.0], [2.2, 570.0], [2.3, 573.0], [2.4, 576.0], [2.5, 578.0], [2.6, 581.0], [2.7, 583.0], [2.8, 586.0], [2.9, 589.0], [3.0, 591.0], [3.1, 594.0], [3.2, 596.0], [3.3, 598.0], [3.4, 600.0], [3.5, 602.0], [3.6, 604.0], [3.7, 606.0], [3.8, 608.0], [3.9, 610.0], [4.0, 612.0], [4.1, 613.0], [4.2, 616.0], [4.3, 618.0], [4.4, 619.0], [4.5, 621.0], [4.6, 623.0], [4.7, 625.0], [4.8, 626.0], [4.9, 628.0], [5.0, 629.0], [5.1, 630.0], [5.2, 632.0], [5.3, 634.0], [5.4, 636.0], [5.5, 637.0], [5.6, 639.0], [5.7, 640.0], [5.8, 642.0], [5.9, 643.0], [6.0, 644.0], [6.1, 646.0], [6.2, 648.0], [6.3, 649.0], [6.4, 651.0], [6.5, 652.0], [6.6, 653.0], [6.7, 654.0], [6.8, 656.0], [6.9, 657.0], [7.0, 658.0], [7.1, 659.0], [7.2, 661.0], [7.3, 662.0], [7.4, 664.0], [7.5, 665.0], [7.6, 667.0], [7.7, 668.0], [7.8, 669.0], [7.9, 670.0], [8.0, 671.0], [8.1, 673.0], [8.2, 674.0], [8.3, 675.0], [8.4, 676.0], [8.5, 677.0], [8.6, 678.0], [8.7, 679.0], [8.8, 680.0], [8.9, 681.0], [9.0, 682.0], [9.1, 683.0], [9.2, 685.0], [9.3, 686.0], [9.4, 688.0], [9.5, 689.0], [9.6, 690.0], [9.7, 691.0], [9.8, 692.0], [9.9, 693.0], [10.0, 694.0], [10.1, 695.0], [10.2, 697.0], [10.3, 697.0], [10.4, 699.0], [10.5, 699.0], [10.6, 701.0], [10.7, 702.0], [10.8, 703.0], [10.9, 704.0], [11.0, 705.0], [11.1, 706.0], [11.2, 707.0], [11.3, 708.0], [11.4, 710.0], [11.5, 710.0], [11.6, 711.0], [11.7, 712.0], [11.8, 713.0], [11.9, 714.0], [12.0, 715.0], [12.1, 716.0], [12.2, 717.0], [12.3, 718.0], [12.4, 719.0], [12.5, 720.0], [12.6, 721.0], [12.7, 722.0], [12.8, 723.0], [12.9, 724.0], [13.0, 725.0], [13.1, 726.0], [13.2, 727.0], [13.3, 728.0], [13.4, 729.0], [13.5, 730.0], [13.6, 731.0], [13.7, 732.0], [13.8, 732.0], [13.9, 733.0], [14.0, 735.0], [14.1, 735.0], [14.2, 736.0], [14.3, 737.0], [14.4, 739.0], [14.5, 740.0], [14.6, 740.0], [14.7, 741.0], [14.8, 742.0], [14.9, 743.0], [15.0, 744.0], [15.1, 745.0], [15.2, 745.0], [15.3, 746.0], [15.4, 747.0], [15.5, 748.0], [15.6, 749.0], [15.7, 750.0], [15.8, 750.0], [15.9, 752.0], [16.0, 752.0], [16.1, 753.0], [16.2, 754.0], [16.3, 755.0], [16.4, 755.0], [16.5, 756.0], [16.6, 757.0], [16.7, 758.0], [16.8, 759.0], [16.9, 760.0], [17.0, 761.0], [17.1, 762.0], [17.2, 762.0], [17.3, 763.0], [17.4, 764.0], [17.5, 765.0], [17.6, 766.0], [17.7, 767.0], [17.8, 768.0], [17.9, 768.0], [18.0, 769.0], [18.1, 770.0], [18.2, 770.0], [18.3, 771.0], [18.4, 772.0], [18.5, 773.0], [18.6, 774.0], [18.7, 775.0], [18.8, 775.0], [18.9, 776.0], [19.0, 777.0], [19.1, 778.0], [19.2, 778.0], [19.3, 779.0], [19.4, 780.0], [19.5, 781.0], [19.6, 782.0], [19.7, 782.0], [19.8, 783.0], [19.9, 784.0], [20.0, 784.0], [20.1, 785.0], [20.2, 786.0], [20.3, 787.0], [20.4, 788.0], [20.5, 789.0], [20.6, 790.0], [20.7, 791.0], [20.8, 792.0], [20.9, 792.0], [21.0, 793.0], [21.1, 794.0], [21.2, 795.0], [21.3, 795.0], [21.4, 796.0], [21.5, 797.0], [21.6, 797.0], [21.7, 798.0], [21.8, 799.0], [21.9, 800.0], [22.0, 800.0], [22.1, 801.0], [22.2, 802.0], [22.3, 803.0], [22.4, 803.0], [22.5, 804.0], [22.6, 805.0], [22.7, 806.0], [22.8, 806.0], [22.9, 807.0], [23.0, 808.0], [23.1, 808.0], [23.2, 809.0], [23.3, 809.0], [23.4, 810.0], [23.5, 811.0], [23.6, 812.0], [23.7, 812.0], [23.8, 813.0], [23.9, 814.0], [24.0, 814.0], [24.1, 815.0], [24.2, 816.0], [24.3, 817.0], [24.4, 817.0], [24.5, 818.0], [24.6, 819.0], [24.7, 819.0], [24.8, 820.0], [24.9, 820.0], [25.0, 822.0], [25.1, 822.0], [25.2, 823.0], [25.3, 824.0], [25.4, 825.0], [25.5, 825.0], [25.6, 826.0], [25.7, 827.0], [25.8, 827.0], [25.9, 828.0], [26.0, 828.0], [26.1, 829.0], [26.2, 830.0], [26.3, 831.0], [26.4, 831.0], [26.5, 832.0], [26.6, 833.0], [26.7, 834.0], [26.8, 835.0], [26.9, 835.0], [27.0, 836.0], [27.1, 837.0], [27.2, 838.0], [27.3, 839.0], [27.4, 840.0], [27.5, 841.0], [27.6, 841.0], [27.7, 842.0], [27.8, 843.0], [27.9, 844.0], [28.0, 845.0], [28.1, 845.0], [28.2, 846.0], [28.3, 846.0], [28.4, 847.0], [28.5, 848.0], [28.6, 848.0], [28.7, 849.0], [28.8, 850.0], [28.9, 851.0], [29.0, 851.0], [29.1, 853.0], [29.2, 854.0], [29.3, 854.0], [29.4, 855.0], [29.5, 856.0], [29.6, 856.0], [29.7, 857.0], [29.8, 858.0], [29.9, 859.0], [30.0, 859.0], [30.1, 860.0], [30.2, 861.0], [30.3, 862.0], [30.4, 863.0], [30.5, 864.0], [30.6, 864.0], [30.7, 865.0], [30.8, 866.0], [30.9, 867.0], [31.0, 868.0], [31.1, 869.0], [31.2, 869.0], [31.3, 870.0], [31.4, 871.0], [31.5, 871.0], [31.6, 872.0], [31.7, 873.0], [31.8, 873.0], [31.9, 874.0], [32.0, 874.0], [32.1, 875.0], [32.2, 876.0], [32.3, 877.0], [32.4, 878.0], [32.5, 878.0], [32.6, 879.0], [32.7, 880.0], [32.8, 881.0], [32.9, 882.0], [33.0, 883.0], [33.1, 883.0], [33.2, 885.0], [33.3, 885.0], [33.4, 886.0], [33.5, 887.0], [33.6, 887.0], [33.7, 888.0], [33.8, 889.0], [33.9, 890.0], [34.0, 891.0], [34.1, 891.0], [34.2, 892.0], [34.3, 893.0], [34.4, 894.0], [34.5, 894.0], [34.6, 895.0], [34.7, 896.0], [34.8, 896.0], [34.9, 897.0], [35.0, 898.0], [35.1, 898.0], [35.2, 899.0], [35.3, 900.0], [35.4, 900.0], [35.5, 901.0], [35.6, 902.0], [35.7, 903.0], [35.8, 903.0], [35.9, 904.0], [36.0, 905.0], [36.1, 906.0], [36.2, 906.0], [36.3, 907.0], [36.4, 908.0], [36.5, 908.0], [36.6, 909.0], [36.7, 910.0], [36.8, 910.0], [36.9, 911.0], [37.0, 912.0], [37.1, 913.0], [37.2, 914.0], [37.3, 914.0], [37.4, 915.0], [37.5, 916.0], [37.6, 916.0], [37.7, 917.0], [37.8, 918.0], [37.9, 919.0], [38.0, 920.0], [38.1, 920.0], [38.2, 921.0], [38.3, 921.0], [38.4, 921.0], [38.5, 923.0], [38.6, 923.0], [38.7, 924.0], [38.8, 925.0], [38.9, 926.0], [39.0, 927.0], [39.1, 928.0], [39.2, 928.0], [39.3, 929.0], [39.4, 930.0], [39.5, 930.0], [39.6, 931.0], [39.7, 932.0], [39.8, 933.0], [39.9, 933.0], [40.0, 934.0], [40.1, 935.0], [40.2, 935.0], [40.3, 936.0], [40.4, 937.0], [40.5, 937.0], [40.6, 938.0], [40.7, 938.0], [40.8, 939.0], [40.9, 940.0], [41.0, 941.0], [41.1, 942.0], [41.2, 942.0], [41.3, 943.0], [41.4, 944.0], [41.5, 945.0], [41.6, 946.0], [41.7, 947.0], [41.8, 948.0], [41.9, 948.0], [42.0, 949.0], [42.1, 950.0], [42.2, 950.0], [42.3, 951.0], [42.4, 952.0], [42.5, 952.0], [42.6, 953.0], [42.7, 954.0], [42.8, 955.0], [42.9, 955.0], [43.0, 956.0], [43.1, 957.0], [43.2, 957.0], [43.3, 958.0], [43.4, 959.0], [43.5, 960.0], [43.6, 961.0], [43.7, 962.0], [43.8, 962.0], [43.9, 963.0], [44.0, 963.0], [44.1, 964.0], [44.2, 965.0], [44.3, 965.0], [44.4, 966.0], [44.5, 967.0], [44.6, 968.0], [44.7, 969.0], [44.8, 970.0], [44.9, 970.0], [45.0, 971.0], [45.1, 972.0], [45.2, 973.0], [45.3, 973.0], [45.4, 974.0], [45.5, 975.0], [45.6, 975.0], [45.7, 976.0], [45.8, 977.0], [45.9, 978.0], [46.0, 979.0], [46.1, 979.0], [46.2, 980.0], [46.3, 981.0], [46.4, 982.0], [46.5, 982.0], [46.6, 983.0], [46.7, 984.0], [46.8, 984.0], [46.9, 985.0], [47.0, 986.0], [47.1, 987.0], [47.2, 987.0], [47.3, 988.0], [47.4, 989.0], [47.5, 990.0], [47.6, 991.0], [47.7, 992.0], [47.8, 992.0], [47.9, 993.0], [48.0, 993.0], [48.1, 994.0], [48.2, 995.0], [48.3, 996.0], [48.4, 997.0], [48.5, 997.0], [48.6, 998.0], [48.7, 999.0], [48.8, 999.0], [48.9, 1000.0], [49.0, 1001.0], [49.1, 1002.0], [49.2, 1003.0], [49.3, 1004.0], [49.4, 1005.0], [49.5, 1006.0], [49.6, 1007.0], [49.7, 1007.0], [49.8, 1008.0], [49.9, 1009.0], [50.0, 1010.0], [50.1, 1010.0], [50.2, 1011.0], [50.3, 1012.0], [50.4, 1012.0], [50.5, 1013.0], [50.6, 1014.0], [50.7, 1014.0], [50.8, 1015.0], [50.9, 1016.0], [51.0, 1017.0], [51.1, 1018.0], [51.2, 1018.0], [51.3, 1019.0], [51.4, 1020.0], [51.5, 1021.0], [51.6, 1022.0], [51.7, 1023.0], [51.8, 1024.0], [51.9, 1024.0], [52.0, 1025.0], [52.1, 1026.0], [52.2, 1027.0], [52.3, 1028.0], [52.4, 1029.0], [52.5, 1030.0], [52.6, 1031.0], [52.7, 1031.0], [52.8, 1032.0], [52.9, 1033.0], [53.0, 1034.0], [53.1, 1035.0], [53.2, 1035.0], [53.3, 1036.0], [53.4, 1037.0], [53.5, 1037.0], [53.6, 1038.0], [53.7, 1039.0], [53.8, 1040.0], [53.9, 1041.0], [54.0, 1042.0], [54.1, 1042.0], [54.2, 1043.0], [54.3, 1044.0], [54.4, 1045.0], [54.5, 1045.0], [54.6, 1046.0], [54.7, 1047.0], [54.8, 1048.0], [54.9, 1049.0], [55.0, 1050.0], [55.1, 1051.0], [55.2, 1052.0], [55.3, 1053.0], [55.4, 1054.0], [55.5, 1055.0], [55.6, 1056.0], [55.7, 1057.0], [55.8, 1058.0], [55.9, 1059.0], [56.0, 1060.0], [56.1, 1061.0], [56.2, 1062.0], [56.3, 1063.0], [56.4, 1063.0], [56.5, 1065.0], [56.6, 1066.0], [56.7, 1067.0], [56.8, 1068.0], [56.9, 1068.0], [57.0, 1069.0], [57.1, 1070.0], [57.2, 1071.0], [57.3, 1072.0], [57.4, 1073.0], [57.5, 1074.0], [57.6, 1075.0], [57.7, 1076.0], [57.8, 1076.0], [57.9, 1077.0], [58.0, 1078.0], [58.1, 1079.0], [58.2, 1080.0], [58.3, 1080.0], [58.4, 1081.0], [58.5, 1082.0], [58.6, 1083.0], [58.7, 1084.0], [58.8, 1085.0], [58.9, 1086.0], [59.0, 1087.0], [59.1, 1088.0], [59.2, 1088.0], [59.3, 1089.0], [59.4, 1090.0], [59.5, 1090.0], [59.6, 1091.0], [59.7, 1092.0], [59.8, 1093.0], [59.9, 1094.0], [60.0, 1095.0], [60.1, 1096.0], [60.2, 1097.0], [60.3, 1098.0], [60.4, 1099.0], [60.5, 1099.0], [60.6, 1100.0], [60.7, 1101.0], [60.8, 1102.0], [60.9, 1103.0], [61.0, 1104.0], [61.1, 1104.0], [61.2, 1105.0], [61.3, 1106.0], [61.4, 1107.0], [61.5, 1108.0], [61.6, 1109.0], [61.7, 1109.0], [61.8, 1110.0], [61.9, 1111.0], [62.0, 1112.0], [62.1, 1113.0], [62.2, 1114.0], [62.3, 1115.0], [62.4, 1116.0], [62.5, 1117.0], [62.6, 1118.0], [62.7, 1119.0], [62.8, 1120.0], [62.9, 1120.0], [63.0, 1121.0], [63.1, 1122.0], [63.2, 1123.0], [63.3, 1124.0], [63.4, 1125.0], [63.5, 1126.0], [63.6, 1127.0], [63.7, 1128.0], [63.8, 1129.0], [63.9, 1130.0], [64.0, 1132.0], [64.1, 1133.0], [64.2, 1134.0], [64.3, 1135.0], [64.4, 1136.0], [64.5, 1137.0], [64.6, 1138.0], [64.7, 1140.0], [64.8, 1140.0], [64.9, 1142.0], [65.0, 1142.0], [65.1, 1143.0], [65.2, 1144.0], [65.3, 1145.0], [65.4, 1147.0], [65.5, 1148.0], [65.6, 1149.0], [65.7, 1150.0], [65.8, 1151.0], [65.9, 1153.0], [66.0, 1154.0], [66.1, 1155.0], [66.2, 1156.0], [66.3, 1157.0], [66.4, 1158.0], [66.5, 1159.0], [66.6, 1161.0], [66.7, 1161.0], [66.8, 1162.0], [66.9, 1163.0], [67.0, 1164.0], [67.1, 1165.0], [67.2, 1166.0], [67.3, 1167.0], [67.4, 1168.0], [67.5, 1169.0], [67.6, 1170.0], [67.7, 1171.0], [67.8, 1172.0], [67.9, 1173.0], [68.0, 1175.0], [68.1, 1176.0], [68.2, 1177.0], [68.3, 1178.0], [68.4, 1179.0], [68.5, 1180.0], [68.6, 1182.0], [68.7, 1183.0], [68.8, 1184.0], [68.9, 1186.0], [69.0, 1187.0], [69.1, 1188.0], [69.2, 1189.0], [69.3, 1190.0], [69.4, 1191.0], [69.5, 1192.0], [69.6, 1193.0], [69.7, 1194.0], [69.8, 1195.0], [69.9, 1196.0], [70.0, 1197.0], [70.1, 1198.0], [70.2, 1199.0], [70.3, 1200.0], [70.4, 1201.0], [70.5, 1202.0], [70.6, 1202.0], [70.7, 1204.0], [70.8, 1205.0], [70.9, 1206.0], [71.0, 1207.0], [71.1, 1209.0], [71.2, 1210.0], [71.3, 1211.0], [71.4, 1212.0], [71.5, 1213.0], [71.6, 1214.0], [71.7, 1215.0], [71.8, 1216.0], [71.9, 1218.0], [72.0, 1219.0], [72.1, 1220.0], [72.2, 1221.0], [72.3, 1223.0], [72.4, 1224.0], [72.5, 1226.0], [72.6, 1227.0], [72.7, 1228.0], [72.8, 1230.0], [72.9, 1231.0], [73.0, 1233.0], [73.1, 1234.0], [73.2, 1235.0], [73.3, 1237.0], [73.4, 1239.0], [73.5, 1240.0], [73.6, 1241.0], [73.7, 1242.0], [73.8, 1244.0], [73.9, 1245.0], [74.0, 1246.0], [74.1, 1248.0], [74.2, 1249.0], [74.3, 1250.0], [74.4, 1252.0], [74.5, 1254.0], [74.6, 1255.0], [74.7, 1257.0], [74.8, 1259.0], [74.9, 1260.0], [75.0, 1262.0], [75.1, 1263.0], [75.2, 1264.0], [75.3, 1266.0], [75.4, 1267.0], [75.5, 1269.0], [75.6, 1270.0], [75.7, 1272.0], [75.8, 1273.0], [75.9, 1275.0], [76.0, 1276.0], [76.1, 1277.0], [76.2, 1278.0], [76.3, 1280.0], [76.4, 1281.0], [76.5, 1282.0], [76.6, 1284.0], [76.7, 1285.0], [76.8, 1286.0], [76.9, 1288.0], [77.0, 1289.0], [77.1, 1290.0], [77.2, 1291.0], [77.3, 1293.0], [77.4, 1294.0], [77.5, 1295.0], [77.6, 1297.0], [77.7, 1299.0], [77.8, 1300.0], [77.9, 1302.0], [78.0, 1303.0], [78.1, 1305.0], [78.2, 1306.0], [78.3, 1307.0], [78.4, 1309.0], [78.5, 1310.0], [78.6, 1312.0], [78.7, 1313.0], [78.8, 1314.0], [78.9, 1316.0], [79.0, 1318.0], [79.1, 1319.0], [79.2, 1321.0], [79.3, 1323.0], [79.4, 1324.0], [79.5, 1325.0], [79.6, 1327.0], [79.7, 1329.0], [79.8, 1331.0], [79.9, 1332.0], [80.0, 1334.0], [80.1, 1336.0], [80.2, 1338.0], [80.3, 1340.0], [80.4, 1341.0], [80.5, 1343.0], [80.6, 1345.0], [80.7, 1347.0], [80.8, 1349.0], [80.9, 1351.0], [81.0, 1352.0], [81.1, 1355.0], [81.2, 1356.0], [81.3, 1358.0], [81.4, 1360.0], [81.5, 1361.0], [81.6, 1364.0], [81.7, 1366.0], [81.8, 1368.0], [81.9, 1369.0], [82.0, 1371.0], [82.1, 1373.0], [82.2, 1376.0], [82.3, 1377.0], [82.4, 1379.0], [82.5, 1381.0], [82.6, 1382.0], [82.7, 1384.0], [82.8, 1386.0], [82.9, 1387.0], [83.0, 1389.0], [83.1, 1391.0], [83.2, 1392.0], [83.3, 1393.0], [83.4, 1395.0], [83.5, 1397.0], [83.6, 1399.0], [83.7, 1401.0], [83.8, 1403.0], [83.9, 1404.0], [84.0, 1406.0], [84.1, 1408.0], [84.2, 1410.0], [84.3, 1412.0], [84.4, 1414.0], [84.5, 1416.0], [84.6, 1418.0], [84.7, 1420.0], [84.8, 1422.0], [84.9, 1424.0], [85.0, 1426.0], [85.1, 1428.0], [85.2, 1431.0], [85.3, 1433.0], [85.4, 1436.0], [85.5, 1439.0], [85.6, 1442.0], [85.7, 1445.0], [85.8, 1448.0], [85.9, 1450.0], [86.0, 1452.0], [86.1, 1454.0], [86.2, 1459.0], [86.3, 1461.0], [86.4, 1464.0], [86.5, 1466.0], [86.6, 1468.0], [86.7, 1470.0], [86.8, 1473.0], [86.9, 1475.0], [87.0, 1477.0], [87.1, 1480.0], [87.2, 1482.0], [87.3, 1485.0], [87.4, 1486.0], [87.5, 1489.0], [87.6, 1491.0], [87.7, 1494.0], [87.8, 1497.0], [87.9, 1502.0], [88.0, 1505.0], [88.1, 1508.0], [88.2, 1511.0], [88.3, 1515.0], [88.4, 1517.0], [88.5, 1522.0], [88.6, 1524.0], [88.7, 1527.0], [88.8, 1531.0], [88.9, 1535.0], [89.0, 1539.0], [89.1, 1543.0], [89.2, 1546.0], [89.3, 1548.0], [89.4, 1552.0], [89.5, 1557.0], [89.6, 1560.0], [89.7, 1562.0], [89.8, 1567.0], [89.9, 1571.0], [90.0, 1574.0], [90.1, 1578.0], [90.2, 1580.0], [90.3, 1584.0], [90.4, 1588.0], [90.5, 1591.0], [90.6, 1594.0], [90.7, 1597.0], [90.8, 1600.0], [90.9, 1604.0], [91.0, 1607.0], [91.1, 1610.0], [91.2, 1614.0], [91.3, 1619.0], [91.4, 1624.0], [91.5, 1629.0], [91.6, 1633.0], [91.7, 1639.0], [91.8, 1642.0], [91.9, 1646.0], [92.0, 1650.0], [92.1, 1656.0], [92.2, 1662.0], [92.3, 1667.0], [92.4, 1672.0], [92.5, 1677.0], [92.6, 1680.0], [92.7, 1685.0], [92.8, 1690.0], [92.9, 1694.0], [93.0, 1700.0], [93.1, 1705.0], [93.2, 1709.0], [93.3, 1714.0], [93.4, 1718.0], [93.5, 1724.0], [93.6, 1732.0], [93.7, 1739.0], [93.8, 1744.0], [93.9, 1750.0], [94.0, 1756.0], [94.1, 1763.0], [94.2, 1770.0], [94.3, 1778.0], [94.4, 1786.0], [94.5, 1792.0], [94.6, 1798.0], [94.7, 1808.0], [94.8, 1814.0], [94.9, 1825.0], [95.0, 1836.0], [95.1, 1847.0], [95.2, 1859.0], [95.3, 1873.0], [95.4, 1880.0], [95.5, 1892.0], [95.6, 1902.0], [95.7, 1908.0], [95.8, 1913.0], [95.9, 1926.0], [96.0, 1939.0], [96.1, 1952.0], [96.2, 1960.0], [96.3, 1973.0], [96.4, 1982.0], [96.5, 1995.0], [96.6, 2005.0], [96.7, 2025.0], [96.8, 2039.0], [96.9, 2058.0], [97.0, 2077.0], [97.1, 2097.0], [97.2, 2122.0], [97.3, 2155.0], [97.4, 2170.0], [97.5, 2202.0], [97.6, 2232.0], [97.7, 2268.0], [97.8, 2304.0], [97.9, 2359.0], [98.0, 2409.0], [98.1, 2470.0], [98.2, 2543.0], [98.3, 2729.0], [98.4, 2920.0], [98.5, 3336.0], [98.6, 4014.0], [98.7, 4646.0], [98.8, 5392.0], [98.9, 5754.0], [99.0, 6488.0], [99.1, 7575.0], [99.2, 8177.0], [99.3, 8770.0], [99.4, 9257.0], [99.5, 9694.0], [99.6, 10201.0], [99.7, 10669.0], [99.8, 11664.0], [99.9, 12914.0], [100.0, 16320.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[0.0, 412.0], [0.1, 3205.0], [0.2, 6367.0], [0.3, 7999.0], [0.4, 10491.0], [0.5, 13111.0], [0.6, 14563.0], [0.7, 15690.0], [0.8, 16658.0], [0.9, 17804.0], [1.0, 18763.0], [1.1, 19462.0], [1.2, 20050.0], [1.3, 20403.0], [1.4, 20901.0], [1.5, 21185.0], [1.6, 21430.0], [1.7, 21631.0], [1.8, 21794.0], [1.9, 21933.0], [2.0, 22129.0], [2.1, 22256.0], [2.2, 22344.0], [2.3, 22524.0], [2.4, 22674.0], [2.5, 22816.0], [2.6, 22924.0], [2.7, 23031.0], [2.8, 23122.0], [2.9, 23239.0], [3.0, 23315.0], [3.1, 23377.0], [3.2, 23454.0], [3.3, 23543.0], [3.4, 23640.0], [3.5, 23706.0], [3.6, 23777.0], [3.7, 23870.0], [3.8, 23933.0], [3.9, 24004.0], [4.0, 24052.0], [4.1, 24124.0], [4.2, 24172.0], [4.3, 24214.0], [4.4, 24275.0], [4.5, 24345.0], [4.6, 24411.0], [4.7, 24472.0], [4.8, 24509.0], [4.9, 24553.0], [5.0, 24589.0], [5.1, 24644.0], [5.2, 24679.0], [5.3, 24725.0], [5.4, 24771.0], [5.5, 24817.0], [5.6, 24851.0], [5.7, 24883.0], [5.8, 24911.0], [5.9, 24958.0], [6.0, 24999.0], [6.1, 25037.0], [6.2, 25064.0], [6.3, 25109.0], [6.4, 25146.0], [6.5, 25182.0], [6.6, 25204.0], [6.7, 25245.0], [6.8, 25287.0], [6.9, 25332.0], [7.0, 25362.0], [7.1, 25404.0], [7.2, 25438.0], [7.3, 25466.0], [7.4, 25507.0], [7.5, 25532.0], [7.6, 25560.0], [7.7, 25595.0], [7.8, 25627.0], [7.9, 25661.0], [8.0, 25683.0], [8.1, 25712.0], [8.2, 25742.0], [8.3, 25767.0], [8.4, 25781.0], [8.5, 25802.0], [8.6, 25822.0], [8.7, 25850.0], [8.8, 25877.0], [8.9, 25905.0], [9.0, 25927.0], [9.1, 25954.0], [9.2, 25980.0], [9.3, 26002.0], [9.4, 26029.0], [9.5, 26052.0], [9.6, 26070.0], [9.7, 26090.0], [9.8, 26115.0], [9.9, 26138.0], [10.0, 26158.0], [10.1, 26180.0], [10.2, 26199.0], [10.3, 26215.0], [10.4, 26241.0], [10.5, 26267.0], [10.6, 26292.0], [10.7, 26312.0], [10.8, 26335.0], [10.9, 26357.0], [11.0, 26383.0], [11.1, 26396.0], [11.2, 26423.0], [11.3, 26450.0], [11.4, 26473.0], [11.5, 26502.0], [11.6, 26527.0], [11.7, 26550.0], [11.8, 26571.0], [11.9, 26590.0], [12.0, 26620.0], [12.1, 26641.0], [12.2, 26659.0], [12.3, 26681.0], [12.4, 26710.0], [12.5, 26726.0], [12.6, 26743.0], [12.7, 26759.0], [12.8, 26783.0], [12.9, 26801.0], [13.0, 26822.0], [13.1, 26837.0], [13.2, 26859.0], [13.3, 26878.0], [13.4, 26901.0], [13.5, 26914.0], [13.6, 26929.0], [13.7, 26952.0], [13.8, 26968.0], [13.9, 26988.0], [14.0, 27003.0], [14.1, 27020.0], [14.2, 27037.0], [14.3, 27057.0], [14.4, 27080.0], [14.5, 27103.0], [14.6, 27121.0], [14.7, 27136.0], [14.8, 27148.0], [14.9, 27177.0], [15.0, 27199.0], [15.1, 27218.0], [15.2, 27231.0], [15.3, 27247.0], [15.4, 27273.0], [15.5, 27293.0], [15.6, 27313.0], [15.7, 27333.0], [15.8, 27355.0], [15.9, 27371.0], [16.0, 27392.0], [16.1, 27406.0], [16.2, 27425.0], [16.3, 27447.0], [16.4, 27467.0], [16.5, 27477.0], [16.6, 27490.0], [16.7, 27510.0], [16.8, 27530.0], [16.9, 27549.0], [17.0, 27568.0], [17.1, 27584.0], [17.2, 27603.0], [17.3, 27615.0], [17.4, 27633.0], [17.5, 27657.0], [17.6, 27676.0], [17.7, 27693.0], [17.8, 27713.0], [17.9, 27727.0], [18.0, 27742.0], [18.1, 27758.0], [18.2, 27769.0], [18.3, 27779.0], [18.4, 27789.0], [18.5, 27803.0], [18.6, 27820.0], [18.7, 27836.0], [18.8, 27853.0], [18.9, 27863.0], [19.0, 27884.0], [19.1, 27895.0], [19.2, 27912.0], [19.3, 27929.0], [19.4, 27947.0], [19.5, 27962.0], [19.6, 27982.0], [19.7, 27995.0], [19.8, 28008.0], [19.9, 28021.0], [20.0, 28033.0], [20.1, 28048.0], [20.2, 28065.0], [20.3, 28077.0], [20.4, 28094.0], [20.5, 28109.0], [20.6, 28126.0], [20.7, 28135.0], [20.8, 28153.0], [20.9, 28167.0], [21.0, 28182.0], [21.1, 28195.0], [21.2, 28205.0], [21.3, 28219.0], [21.4, 28232.0], [21.5, 28247.0], [21.6, 28260.0], [21.7, 28275.0], [21.8, 28294.0], [21.9, 28304.0], [22.0, 28316.0], [22.1, 28328.0], [22.2, 28339.0], [22.3, 28351.0], [22.4, 28365.0], [22.5, 28378.0], [22.6, 28393.0], [22.7, 28405.0], [22.8, 28418.0], [22.9, 28434.0], [23.0, 28446.0], [23.1, 28464.0], [23.2, 28479.0], [23.3, 28492.0], [23.4, 28509.0], [23.5, 28520.0], [23.6, 28528.0], [23.7, 28539.0], [23.8, 28552.0], [23.9, 28560.0], [24.0, 28573.0], [24.1, 28583.0], [24.2, 28600.0], [24.3, 28609.0], [24.4, 28621.0], [24.5, 28634.0], [24.6, 28645.0], [24.7, 28656.0], [24.8, 28673.0], [24.9, 28683.0], [25.0, 28700.0], [25.1, 28715.0], [25.2, 28724.0], [25.3, 28734.0], [25.4, 28743.0], [25.5, 28758.0], [25.6, 28777.0], [25.7, 28789.0], [25.8, 28805.0], [25.9, 28816.0], [26.0, 28827.0], [26.1, 28842.0], [26.2, 28858.0], [26.3, 28870.0], [26.4, 28888.0], [26.5, 28906.0], [26.6, 28918.0], [26.7, 28932.0], [26.8, 28944.0], [26.9, 28958.0], [27.0, 28970.0], [27.1, 28980.0], [27.2, 28997.0], [27.3, 29010.0], [27.4, 29024.0], [27.5, 29036.0], [27.6, 29046.0], [27.7, 29061.0], [27.8, 29075.0], [27.9, 29087.0], [28.0, 29097.0], [28.1, 29106.0], [28.2, 29118.0], [28.3, 29132.0], [28.4, 29149.0], [28.5, 29166.0], [28.6, 29176.0], [28.7, 29190.0], [28.8, 29205.0], [28.9, 29213.0], [29.0, 29228.0], [29.1, 29243.0], [29.2, 29256.0], [29.3, 29268.0], [29.4, 29284.0], [29.5, 29299.0], [29.6, 29315.0], [29.7, 29325.0], [29.8, 29334.0], [29.9, 29350.0], [30.0, 29363.0], [30.1, 29374.0], [30.2, 29388.0], [30.3, 29400.0], [30.4, 29412.0], [30.5, 29421.0], [30.6, 29432.0], [30.7, 29449.0], [30.8, 29461.0], [30.9, 29472.0], [31.0, 29483.0], [31.1, 29496.0], [31.2, 29510.0], [31.3, 29522.0], [31.4, 29532.0], [31.5, 29547.0], [31.6, 29558.0], [31.7, 29566.0], [31.8, 29575.0], [31.9, 29586.0], [32.0, 29595.0], [32.1, 29608.0], [32.2, 29617.0], [32.3, 29627.0], [32.4, 29636.0], [32.5, 29647.0], [32.6, 29661.0], [32.7, 29670.0], [32.8, 29679.0], [32.9, 29690.0], [33.0, 29700.0], [33.1, 29710.0], [33.2, 29723.0], [33.3, 29728.0], [33.4, 29741.0], [33.5, 29755.0], [33.6, 29769.0], [33.7, 29780.0], [33.8, 29791.0], [33.9, 29802.0], [34.0, 29813.0], [34.1, 29823.0], [34.2, 29833.0], [34.3, 29848.0], [34.4, 29864.0], [34.5, 29875.0], [34.6, 29883.0], [34.7, 29896.0], [34.8, 29909.0], [34.9, 29921.0], [35.0, 29935.0], [35.1, 29952.0], [35.2, 29969.0], [35.3, 29978.0], [35.4, 29988.0], [35.5, 29998.0], [35.6, 30011.0], [35.7, 30023.0], [35.8, 30034.0], [35.9, 30044.0], [36.0, 30057.0], [36.1, 30068.0], [36.2, 30077.0], [36.3, 30093.0], [36.4, 30106.0], [36.5, 30118.0], [36.6, 30128.0], [36.7, 30143.0], [36.8, 30153.0], [36.9, 30167.0], [37.0, 30176.0], [37.1, 30188.0], [37.2, 30200.0], [37.3, 30212.0], [37.4, 30222.0], [37.5, 30236.0], [37.6, 30246.0], [37.7, 30256.0], [37.8, 30269.0], [37.9, 30280.0], [38.0, 30288.0], [38.1, 30295.0], [38.2, 30305.0], [38.3, 30320.0], [38.4, 30330.0], [38.5, 30340.0], [38.6, 30350.0], [38.7, 30364.0], [38.8, 30376.0], [38.9, 30387.0], [39.0, 30394.0], [39.1, 30405.0], [39.2, 30416.0], [39.3, 30426.0], [39.4, 30436.0], [39.5, 30449.0], [39.6, 30457.0], [39.7, 30466.0], [39.8, 30475.0], [39.9, 30486.0], [40.0, 30496.0], [40.1, 30506.0], [40.2, 30515.0], [40.3, 30527.0], [40.4, 30535.0], [40.5, 30544.0], [40.6, 30561.0], [40.7, 30571.0], [40.8, 30585.0], [40.9, 30594.0], [41.0, 30606.0], [41.1, 30619.0], [41.2, 30631.0], [41.3, 30642.0], [41.4, 30654.0], [41.5, 30668.0], [41.6, 30677.0], [41.7, 30686.0], [41.8, 30696.0], [41.9, 30706.0], [42.0, 30720.0], [42.1, 30731.0], [42.2, 30741.0], [42.3, 30751.0], [42.4, 30761.0], [42.5, 30771.0], [42.6, 30782.0], [42.7, 30795.0], [42.8, 30802.0], [42.9, 30809.0], [43.0, 30821.0], [43.1, 30836.0], [43.2, 30851.0], [43.3, 30869.0], [43.4, 30881.0], [43.5, 30893.0], [43.6, 30904.0], [43.7, 30915.0], [43.8, 30924.0], [43.9, 30936.0], [44.0, 30948.0], [44.1, 30961.0], [44.2, 30968.0], [44.3, 30975.0], [44.4, 30985.0], [44.5, 30997.0], [44.6, 31009.0], [44.7, 31017.0], [44.8, 31031.0], [44.9, 31044.0], [45.0, 31054.0], [45.1, 31062.0], [45.2, 31070.0], [45.3, 31084.0], [45.4, 31101.0], [45.5, 31112.0], [45.6, 31122.0], [45.7, 31132.0], [45.8, 31140.0], [45.9, 31152.0], [46.0, 31165.0], [46.1, 31178.0], [46.2, 31190.0], [46.3, 31207.0], [46.4, 31216.0], [46.5, 31228.0], [46.6, 31236.0], [46.7, 31250.0], [46.8, 31260.0], [46.9, 31270.0], [47.0, 31282.0], [47.1, 31289.0], [47.2, 31299.0], [47.3, 31310.0], [47.4, 31324.0], [47.5, 31335.0], [47.6, 31345.0], [47.7, 31361.0], [47.8, 31374.0], [47.9, 31386.0], [48.0, 31400.0], [48.1, 31410.0], [48.2, 31419.0], [48.3, 31429.0], [48.4, 31434.0], [48.5, 31443.0], [48.6, 31457.0], [48.7, 31468.0], [48.8, 31483.0], [48.9, 31493.0], [49.0, 31506.0], [49.1, 31514.0], [49.2, 31527.0], [49.3, 31537.0], [49.4, 31546.0], [49.5, 31556.0], [49.6, 31565.0], [49.7, 31579.0], [49.8, 31590.0], [49.9, 31600.0], [50.0, 31610.0], [50.1, 31619.0], [50.2, 31629.0], [50.3, 31645.0], [50.4, 31657.0], [50.5, 31668.0], [50.6, 31680.0], [50.7, 31690.0], [50.8, 31701.0], [50.9, 31711.0], [51.0, 31721.0], [51.1, 31732.0], [51.2, 31743.0], [51.3, 31756.0], [51.4, 31765.0], [51.5, 31771.0], [51.6, 31781.0], [51.7, 31794.0], [51.8, 31804.0], [51.9, 31810.0], [52.0, 31819.0], [52.1, 31831.0], [52.2, 31843.0], [52.3, 31862.0], [52.4, 31872.0], [52.5, 31887.0], [52.6, 31900.0], [52.7, 31910.0], [52.8, 31924.0], [52.9, 31936.0], [53.0, 31950.0], [53.1, 31960.0], [53.2, 31975.0], [53.3, 31986.0], [53.4, 32002.0], [53.5, 32012.0], [53.6, 32025.0], [53.7, 32038.0], [53.8, 32052.0], [53.9, 32067.0], [54.0, 32076.0], [54.1, 32088.0], [54.2, 32095.0], [54.3, 32107.0], [54.4, 32118.0], [54.5, 32134.0], [54.6, 32152.0], [54.7, 32164.0], [54.8, 32176.0], [54.9, 32188.0], [55.0, 32198.0], [55.1, 32212.0], [55.2, 32223.0], [55.3, 32229.0], [55.4, 32236.0], [55.5, 32248.0], [55.6, 32261.0], [55.7, 32271.0], [55.8, 32290.0], [55.9, 32297.0], [56.0, 32311.0], [56.1, 32330.0], [56.2, 32347.0], [56.3, 32362.0], [56.4, 32376.0], [56.5, 32386.0], [56.6, 32396.0], [56.7, 32407.0], [56.8, 32417.0], [56.9, 32430.0], [57.0, 32446.0], [57.1, 32457.0], [57.2, 32471.0], [57.3, 32485.0], [57.4, 32498.0], [57.5, 32514.0], [57.6, 32525.0], [57.7, 32534.0], [57.8, 32544.0], [57.9, 32553.0], [58.0, 32568.0], [58.1, 32579.0], [58.2, 32596.0], [58.3, 32606.0], [58.4, 32614.0], [58.5, 32629.0], [58.6, 32644.0], [58.7, 32659.0], [58.8, 32673.0], [58.9, 32683.0], [59.0, 32690.0], [59.1, 32700.0], [59.2, 32710.0], [59.3, 32724.0], [59.4, 32737.0], [59.5, 32755.0], [59.6, 32768.0], [59.7, 32782.0], [59.8, 32795.0], [59.9, 32806.0], [60.0, 32820.0], [60.1, 32831.0], [60.2, 32844.0], [60.3, 32859.0], [60.4, 32876.0], [60.5, 32882.0], [60.6, 32894.0], [60.7, 32906.0], [60.8, 32913.0], [60.9, 32924.0], [61.0, 32937.0], [61.1, 32952.0], [61.2, 32965.0], [61.3, 32978.0], [61.4, 32989.0], [61.5, 33000.0], [61.6, 33014.0], [61.7, 33029.0], [61.8, 33044.0], [61.9, 33055.0], [62.0, 33066.0], [62.1, 33081.0], [62.2, 33090.0], [62.3, 33107.0], [62.4, 33120.0], [62.5, 33130.0], [62.6, 33143.0], [62.7, 33159.0], [62.8, 33177.0], [62.9, 33190.0], [63.0, 33207.0], [63.1, 33221.0], [63.2, 33234.0], [63.3, 33250.0], [63.4, 33265.0], [63.5, 33281.0], [63.6, 33297.0], [63.7, 33314.0], [63.8, 33324.0], [63.9, 33333.0], [64.0, 33347.0], [64.1, 33361.0], [64.2, 33373.0], [64.3, 33388.0], [64.4, 33395.0], [64.5, 33407.0], [64.6, 33420.0], [64.7, 33435.0], [64.8, 33446.0], [64.9, 33456.0], [65.0, 33466.0], [65.1, 33483.0], [65.2, 33493.0], [65.3, 33504.0], [65.4, 33514.0], [65.5, 33521.0], [65.6, 33536.0], [65.7, 33559.0], [65.8, 33575.0], [65.9, 33586.0], [66.0, 33597.0], [66.1, 33611.0], [66.2, 33628.0], [66.3, 33638.0], [66.4, 33651.0], [66.5, 33663.0], [66.6, 33672.0], [66.7, 33688.0], [66.8, 33702.0], [66.9, 33714.0], [67.0, 33728.0], [67.1, 33743.0], [67.2, 33759.0], [67.3, 33775.0], [67.4, 33792.0], [67.5, 33812.0], [67.6, 33824.0], [67.7, 33840.0], [67.8, 33859.0], [67.9, 33875.0], [68.0, 33888.0], [68.1, 33906.0], [68.2, 33920.0], [68.3, 33928.0], [68.4, 33937.0], [68.5, 33957.0], [68.6, 33980.0], [68.7, 33997.0], [68.8, 34008.0], [68.9, 34022.0], [69.0, 34030.0], [69.1, 34051.0], [69.2, 34064.0], [69.3, 34077.0], [69.4, 34089.0], [69.5, 34102.0], [69.6, 34114.0], [69.7, 34129.0], [69.8, 34146.0], [69.9, 34163.0], [70.0, 34182.0], [70.1, 34195.0], [70.2, 34207.0], [70.3, 34220.0], [70.4, 34234.0], [70.5, 34245.0], [70.6, 34260.0], [70.7, 34277.0], [70.8, 34286.0], [70.9, 34304.0], [71.0, 34320.0], [71.1, 34332.0], [71.2, 34349.0], [71.3, 34367.0], [71.4, 34380.0], [71.5, 34398.0], [71.6, 34413.0], [71.7, 34424.0], [71.8, 34443.0], [71.9, 34457.0], [72.0, 34472.0], [72.1, 34487.0], [72.2, 34505.0], [72.3, 34514.0], [72.4, 34528.0], [72.5, 34546.0], [72.6, 34560.0], [72.7, 34575.0], [72.8, 34592.0], [72.9, 34607.0], [73.0, 34621.0], [73.1, 34632.0], [73.2, 34646.0], [73.3, 34658.0], [73.4, 34677.0], [73.5, 34693.0], [73.6, 34708.0], [73.7, 34724.0], [73.8, 34737.0], [73.9, 34752.0], [74.0, 34769.0], [74.1, 34784.0], [74.2, 34804.0], [74.3, 34819.0], [74.4, 34833.0], [74.5, 34858.0], [74.6, 34876.0], [74.7, 34894.0], [74.8, 34909.0], [74.9, 34929.0], [75.0, 34941.0], [75.1, 34956.0], [75.2, 34968.0], [75.3, 34985.0], [75.4, 34998.0], [75.5, 35022.0], [75.6, 35043.0], [75.7, 35060.0], [75.8, 35072.0], [75.9, 35089.0], [76.0, 35106.0], [76.1, 35124.0], [76.2, 35158.0], [76.3, 35170.0], [76.4, 35184.0], [76.5, 35202.0], [76.6, 35218.0], [76.7, 35235.0], [76.8, 35253.0], [76.9, 35274.0], [77.0, 35285.0], [77.1, 35303.0], [77.2, 35319.0], [77.3, 35337.0], [77.4, 35359.0], [77.5, 35380.0], [77.6, 35402.0], [77.7, 35423.0], [77.8, 35443.0], [77.9, 35464.0], [78.0, 35487.0], [78.1, 35504.0], [78.2, 35523.0], [78.3, 35542.0], [78.4, 35567.0], [78.5, 35589.0], [78.6, 35606.0], [78.7, 35623.0], [78.8, 35640.0], [78.9, 35658.0], [79.0, 35677.0], [79.1, 35698.0], [79.2, 35714.0], [79.3, 35736.0], [79.4, 35757.0], [79.5, 35784.0], [79.6, 35809.0], [79.7, 35833.0], [79.8, 35853.0], [79.9, 35877.0], [80.0, 35900.0], [80.1, 35915.0], [80.2, 35937.0], [80.3, 35963.0], [80.4, 35981.0], [80.5, 35999.0], [80.6, 36031.0], [80.7, 36055.0], [80.8, 36073.0], [80.9, 36097.0], [81.0, 36114.0], [81.1, 36138.0], [81.2, 36160.0], [81.3, 36181.0], [81.4, 36199.0], [81.5, 36223.0], [81.6, 36248.0], [81.7, 36266.0], [81.8, 36292.0], [81.9, 36307.0], [82.0, 36328.0], [82.1, 36353.0], [82.2, 36372.0], [82.3, 36394.0], [82.4, 36415.0], [82.5, 36430.0], [82.6, 36456.0], [82.7, 36472.0], [82.8, 36492.0], [82.9, 36514.0], [83.0, 36536.0], [83.1, 36560.0], [83.2, 36584.0], [83.3, 36605.0], [83.4, 36624.0], [83.5, 36647.0], [83.6, 36668.0], [83.7, 36679.0], [83.8, 36700.0], [83.9, 36726.0], [84.0, 36752.0], [84.1, 36782.0], [84.2, 36809.0], [84.3, 36830.0], [84.4, 36852.0], [84.5, 36875.0], [84.6, 36896.0], [84.7, 36923.0], [84.8, 36945.0], [84.9, 36973.0], [85.0, 36994.0], [85.1, 37013.0], [85.2, 37034.0], [85.3, 37055.0], [85.4, 37091.0], [85.5, 37113.0], [85.6, 37133.0], [85.7, 37172.0], [85.8, 37203.0], [85.9, 37241.0], [86.0, 37268.0], [86.1, 37289.0], [86.2, 37318.0], [86.3, 37348.0], [86.4, 37374.0], [86.5, 37398.0], [86.6, 37418.0], [86.7, 37450.0], [86.8, 37467.0], [86.9, 37487.0], [87.0, 37507.0], [87.1, 37535.0], [87.2, 37565.0], [87.3, 37594.0], [87.4, 37616.0], [87.5, 37639.0], [87.6, 37670.0], [87.7, 37704.0], [87.8, 37728.0], [87.9, 37761.0], [88.0, 37799.0], [88.1, 37830.0], [88.2, 37855.0], [88.3, 37895.0], [88.4, 37918.0], [88.5, 37947.0], [88.6, 37975.0], [88.7, 38009.0], [88.8, 38033.0], [88.9, 38085.0], [89.0, 38116.0], [89.1, 38144.0], [89.2, 38166.0], [89.3, 38202.0], [89.4, 38234.0], [89.5, 38274.0], [89.6, 38297.0], [89.7, 38330.0], [89.8, 38365.0], [89.9, 38419.0], [90.0, 38444.0], [90.1, 38480.0], [90.2, 38505.0], [90.3, 38544.0], [90.4, 38584.0], [90.5, 38615.0], [90.6, 38645.0], [90.7, 38685.0], [90.8, 38711.0], [90.9, 38739.0], [91.0, 38773.0], [91.1, 38806.0], [91.2, 38840.0], [91.3, 38872.0], [91.4, 38902.0], [91.5, 38940.0], [91.6, 38982.0], [91.7, 39020.0], [91.8, 39069.0], [91.9, 39110.0], [92.0, 39163.0], [92.1, 39212.0], [92.2, 39257.0], [92.3, 39299.0], [92.4, 39334.0], [92.5, 39408.0], [92.6, 39450.0], [92.7, 39503.0], [92.8, 39545.0], [92.9, 39601.0], [93.0, 39643.0], [93.1, 39689.0], [93.2, 39736.0], [93.3, 39782.0], [93.4, 39850.0], [93.5, 39910.0], [93.6, 39963.0], [93.7, 40040.0], [93.8, 40090.0], [93.9, 40134.0], [94.0, 40181.0], [94.1, 40227.0], [94.2, 40281.0], [94.3, 40331.0], [94.4, 40381.0], [94.5, 40450.0], [94.6, 40497.0], [94.7, 40542.0], [94.8, 40600.0], [94.9, 40634.0], [95.0, 40666.0], [95.1, 40721.0], [95.2, 40783.0], [95.3, 40823.0], [95.4, 40892.0], [95.5, 40952.0], [95.6, 41032.0], [95.7, 41090.0], [95.8, 41136.0], [95.9, 41172.0], [96.0, 41243.0], [96.1, 41317.0], [96.2, 41374.0], [96.3, 41441.0], [96.4, 41507.0], [96.5, 41572.0], [96.6, 41653.0], [96.7, 41749.0], [96.8, 41842.0], [96.9, 41898.0], [97.0, 41985.0], [97.1, 42104.0], [97.2, 42229.0], [97.3, 42333.0], [97.4, 42444.0], [97.5, 42541.0], [97.6, 42648.0], [97.7, 42782.0], [97.8, 42870.0], [97.9, 43021.0], [98.0, 43169.0], [98.1, 43317.0], [98.2, 43453.0], [98.3, 43602.0], [98.4, 43769.0], [98.5, 43913.0], [98.6, 44064.0], [98.7, 44294.0], [98.8, 44476.0], [98.9, 44725.0], [99.0, 44900.0], [99.1, 45145.0], [99.2, 45470.0], [99.3, 45714.0], [99.4, 46058.0], [99.5, 46428.0], [99.6, 46873.0], [99.7, 47494.0], [99.8, 48289.0], [99.9, 49559.0], [100.0, 54867.0]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 2969.0, "series": [{"data": [[200.0, 1.0], [300.0, 16.0], [400.0, 127.0], [500.0, 595.0], [600.0, 1561.0], [700.0, 2491.0], [800.0, 2925.0], [900.0, 2969.0], [1000.0, 2561.0], [1100.0, 2132.0], [1200.0, 1640.0], [1300.0, 1291.0], [1400.0, 918.0], [1500.0, 644.0], [1600.0, 483.0], [1700.0, 354.0], [1800.0, 210.0], [1900.0, 213.0], [2000.0, 124.0], [2100.0, 82.0], [2200.0, 66.0], [2300.0, 43.0], [2400.0, 39.0], [2500.0, 16.0], [2600.0, 10.0], [2800.0, 16.0], [2700.0, 9.0], [2900.0, 8.0], [3000.0, 4.0], [3100.0, 4.0], [3200.0, 5.0], [3300.0, 5.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 3.0], [4300.0, 3.0], [4200.0, 3.0], [4100.0, 3.0], [4500.0, 5.0], [4400.0, 4.0], [4600.0, 4.0], [4700.0, 2.0], [4800.0, 2.0], [5000.0, 4.0], [4900.0, 5.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 3.0], [5500.0, 11.0], [5400.0, 3.0], [5600.0, 6.0], [5700.0, 4.0], [5800.0, 3.0], [6100.0, 4.0], [6000.0, 2.0], [5900.0, 2.0], [6200.0, 2.0], [6300.0, 3.0], [6400.0, 4.0], [6500.0, 3.0], [6600.0, 3.0], [6800.0, 3.0], [6900.0, 2.0], [6700.0, 1.0], [7100.0, 4.0], [7300.0, 2.0], [7200.0, 1.0], [7400.0, 2.0], [7600.0, 2.0], [7500.0, 1.0], [7900.0, 9.0], [7800.0, 2.0], [7700.0, 1.0], [8100.0, 5.0], [8000.0, 2.0], [8700.0, 6.0], [8300.0, 6.0], [8500.0, 5.0], [8200.0, 2.0], [8600.0, 3.0], [8400.0, 2.0], [8900.0, 8.0], [8800.0, 4.0], [9000.0, 4.0], [9100.0, 3.0], [9200.0, 5.0], [9400.0, 6.0], [9300.0, 5.0], [9600.0, 5.0], [9700.0, 3.0], [9500.0, 2.0], [10100.0, 7.0], [9800.0, 7.0], [10200.0, 4.0], [10000.0, 3.0], [10600.0, 5.0], [10300.0, 3.0], [10500.0, 9.0], [10400.0, 3.0], [10700.0, 4.0], [11100.0, 3.0], [10800.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [11200.0, 1.0], [11700.0, 4.0], [11400.0, 6.0], [11600.0, 4.0], [11500.0, 1.0], [11300.0, 1.0], [11900.0, 1.0], [11800.0, 5.0], [12200.0, 3.0], [12100.0, 2.0], [12000.0, 1.0], [12700.0, 1.0], [12500.0, 1.0], [12400.0, 1.0], [12900.0, 2.0], [13200.0, 1.0], [13300.0, 2.0], [13000.0, 1.0], [13600.0, 2.0], [13400.0, 1.0], [13800.0, 1.0], [13500.0, 2.0], [14100.0, 1.0], [14000.0, 1.0], [14400.0, 3.0], [14700.0, 1.0], [15000.0, 1.0], [14900.0, 1.0], [15500.0, 1.0], [16300.0, 1.0]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[34500.0, 153.0], [33700.0, 143.0], [32900.0, 185.0], [36100.0, 108.0], [35300.0, 111.0], [36900.0, 90.0], [37700.0, 69.0], [38500.0, 59.0], [39300.0, 42.0], [40100.0, 50.0], [40900.0, 28.0], [41700.0, 27.0], [42500.0, 20.0], [43300.0, 14.0], [44100.0, 8.0], [44900.0, 13.0], [45700.0, 8.0], [46500.0, 4.0], [48100.0, 4.0], [48900.0, 3.0], [47300.0, 4.0], [49700.0, 1.0], [50500.0, 1.0], [51300.0, 1.0], [400.0, 1.0], [800.0, 1.0], [900.0, 1.0], [1300.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1900.0, 2.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [3800.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [6100.0, 2.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [7100.0, 2.0], [7000.0, 2.0], [7300.0, 2.0], [7200.0, 2.0], [7400.0, 1.0], [7600.0, 2.0], [7900.0, 2.0], [7700.0, 1.0], [7800.0, 3.0], [8000.0, 3.0], [8600.0, 1.0], [8200.0, 1.0], [8400.0, 1.0], [9200.0, 2.0], [9400.0, 2.0], [10200.0, 1.0], [10000.0, 2.0], [9800.0, 1.0], [10400.0, 2.0], [10600.0, 1.0], [11600.0, 1.0], [12000.0, 1.0], [12400.0, 2.0], [12600.0, 2.0], [13400.0, 3.0], [13800.0, 1.0], [14000.0, 3.0], [14200.0, 2.0], [14400.0, 3.0], [14800.0, 5.0], [15000.0, 2.0], [15800.0, 3.0], [15400.0, 1.0], [15600.0, 1.0], [16000.0, 1.0], [16200.0, 4.0], [16800.0, 2.0], [16400.0, 1.0], [17200.0, 3.0], [18000.0, 2.0], [18400.0, 2.0], [18800.0, 1.0], [19200.0, 1.0], [20000.0, 8.0], [19600.0, 2.0], [20400.0, 4.0], [20800.0, 7.0], [21200.0, 6.0], [22400.0, 17.0], [22000.0, 12.0], [21600.0, 9.0], [22800.0, 17.0], [23200.0, 24.0], [24000.0, 34.0], [24400.0, 44.0], [23600.0, 23.0], [25200.0, 57.0], [24800.0, 56.0], [25600.0, 73.0], [26000.0, 99.0], [26400.0, 83.0], [26800.0, 109.0], [27200.0, 112.0], [27600.0, 119.0], [28400.0, 154.0], [28000.0, 156.0], [28800.0, 156.0], [29600.0, 208.0], [29200.0, 165.0], [30400.0, 214.0], [30000.0, 185.0], [31200.0, 209.0], [30800.0, 179.0], [31600.0, 197.0], [32000.0, 187.0], [32400.0, 169.0], [33600.0, 165.0], [34400.0, 139.0], [32800.0, 178.0], [35200.0, 130.0], [36000.0, 90.0], [36800.0, 102.0], [38400.0, 66.0], [37600.0, 79.0], [40000.0, 42.0], [39200.0, 48.0], [40800.0, 41.0], [41600.0, 22.0], [42400.0, 26.0], [43200.0, 16.0], [44000.0, 12.0], [44800.0, 9.0], [46400.0, 4.0], [45600.0, 9.0], [48800.0, 2.0], [48000.0, 3.0], [47200.0, 2.0], [52800.0, 1.0], [33900.0, 141.0], [33100.0, 153.0], [34700.0, 137.0], [36300.0, 104.0], [35500.0, 112.0], [38700.0, 69.0], [37100.0, 82.0], [37900.0, 79.0], [39500.0, 45.0], [40300.0, 40.0], [41100.0, 49.0], [41900.0, 24.0], [42700.0, 21.0], [43500.0, 11.0], [44300.0, 9.0], [45900.0, 9.0], [46700.0, 5.0], [45100.0, 7.0], [49100.0, 2.0], [47500.0, 2.0], [50700.0, 2.0], [49900.0, 1.0], [16500.0, 2.0], [16900.0, 1.0], [17300.0, 1.0], [18100.0, 2.0], [17700.0, 2.0], [19300.0, 5.0], [18500.0, 2.0], [18900.0, 2.0], [20100.0, 4.0], [19700.0, 4.0], [20900.0, 3.0], [20500.0, 6.0], [21300.0, 9.0], [21700.0, 18.0], [22100.0, 17.0], [22500.0, 14.0], [22900.0, 23.0], [23300.0, 34.0], [23700.0, 31.0], [24500.0, 58.0], [24100.0, 49.0], [25300.0, 55.0], [24900.0, 60.0], [25700.0, 92.0], [26100.0, 105.0], [26500.0, 98.0], [27300.0, 115.0], [26900.0, 124.0], [28500.0, 185.0], [28100.0, 153.0], [27700.0, 165.0], [29300.0, 170.0], [28900.0, 165.0], [29700.0, 197.0], [30500.0, 195.0], [30100.0, 184.0], [30900.0, 210.0], [31300.0, 174.0], [31700.0, 210.0], [32100.0, 166.0], [32500.0, 184.0], [34600.0, 149.0], [33000.0, 165.0], [33800.0, 140.0], [35400.0, 106.0], [36200.0, 93.0], [37000.0, 84.0], [37800.0, 67.0], [38600.0, 70.0], [39400.0, 44.0], [40200.0, 40.0], [41000.0, 36.0], [41800.0, 31.0], [42600.0, 14.0], [43400.0, 19.0], [44200.0, 13.0], [45000.0, 5.0], [45800.0, 7.0], [46600.0, 7.0], [48200.0, 4.0], [47400.0, 3.0], [49000.0, 2.0], [49800.0, 2.0], [51400.0, 2.0], [34100.0, 148.0], [33300.0, 182.0], [34900.0, 150.0], [35700.0, 97.0], [36500.0, 94.0], [37300.0, 82.0], [38900.0, 59.0], [38100.0, 76.0], [39700.0, 47.0], [40500.0, 42.0], [42900.0, 18.0], [42100.0, 20.0], [41300.0, 34.0], [44500.0, 10.0], [43700.0, 13.0], [46100.0, 6.0], [46900.0, 4.0], [45300.0, 4.0], [47700.0, 3.0], [48500.0, 1.0], [50900.0, 1.0], [50100.0, 2.0], [53300.0, 1.0], [8300.0, 1.0], [8700.0, 1.0], [8900.0, 1.0], [9100.0, 2.0], [9300.0, 1.0], [10700.0, 1.0], [11100.0, 2.0], [10900.0, 1.0], [11500.0, 1.0], [11300.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12300.0, 2.0], [12500.0, 1.0], [12700.0, 1.0], [13100.0, 3.0], [12900.0, 1.0], [13500.0, 3.0], [14100.0, 2.0], [14300.0, 2.0], [14700.0, 4.0], [14500.0, 2.0], [15300.0, 5.0], [14900.0, 1.0], [15100.0, 1.0], [15700.0, 4.0], [15500.0, 2.0], [16100.0, 1.0], [16300.0, 2.0], [15900.0, 1.0], [16600.0, 3.0], [17400.0, 3.0], [17000.0, 3.0], [18200.0, 3.0], [17800.0, 4.0], [19400.0, 7.0], [18600.0, 1.0], [19000.0, 5.0], [20200.0, 7.0], [19800.0, 4.0], [21400.0, 14.0], [21000.0, 9.0], [20600.0, 2.0], [22200.0, 18.0], [21800.0, 15.0], [23000.0, 21.0], [22600.0, 13.0], [23400.0, 24.0], [23800.0, 27.0], [24200.0, 34.0], [25400.0, 64.0], [24600.0, 46.0], [25000.0, 59.0], [26200.0, 94.0], [25800.0, 85.0], [26600.0, 92.0], [27400.0, 130.0], [27000.0, 116.0], [28600.0, 174.0], [28200.0, 154.0], [27800.0, 146.0], [29400.0, 187.0], [29000.0, 176.0], [29800.0, 185.0], [30600.0, 194.0], [30200.0, 205.0], [31400.0, 208.0], [31000.0, 187.0], [32200.0, 201.0], [31800.0, 185.0], [32600.0, 188.0], [34800.0, 122.0], [33200.0, 146.0], [34000.0, 165.0], [35600.0, 115.0], [36400.0, 115.0], [38000.0, 59.0], [38800.0, 66.0], [37200.0, 74.0], [39600.0, 47.0], [40400.0, 41.0], [42000.0, 18.0], [42800.0, 16.0], [41200.0, 31.0], [44400.0, 16.0], [43600.0, 18.0], [45200.0, 9.0], [46800.0, 3.0], [46000.0, 4.0], [48400.0, 5.0], [47600.0, 3.0], [50800.0, 1.0], [49200.0, 2.0], [50000.0, 1.0], [54800.0, 1.0], [33500.0, 172.0], [34300.0, 142.0], [35900.0, 111.0], [36700.0, 82.0], [35100.0, 116.0], [37500.0, 78.0], [38300.0, 60.0], [40700.0, 42.0], [39100.0, 44.0], [39900.0, 35.0], [41500.0, 34.0], [42300.0, 22.0], [44700.0, 14.0], [43100.0, 13.0], [43900.0, 15.0], [45500.0, 5.0], [47100.0, 6.0], [46300.0, 6.0], [47900.0, 1.0], [48700.0, 1.0], [49500.0, 2.0], [50300.0, 1.0], [52700.0, 1.0], [17100.0, 1.0], [16700.0, 2.0], [17500.0, 2.0], [17900.0, 2.0], [18300.0, 3.0], [19100.0, 5.0], [18700.0, 2.0], [19900.0, 4.0], [20300.0, 5.0], [19500.0, 1.0], [21500.0, 10.0], [21100.0, 12.0], [20700.0, 3.0], [21900.0, 13.0], [22300.0, 14.0], [22700.0, 16.0], [23100.0, 22.0], [23500.0, 28.0], [23900.0, 34.0], [24300.0, 31.0], [24700.0, 50.0], [25100.0, 65.0], [25500.0, 75.0], [25900.0, 92.0], [26300.0, 101.0], [27100.0, 113.0], [27500.0, 116.0], [26700.0, 118.0], [28300.0, 175.0], [27900.0, 132.0], [29500.0, 195.0], [28700.0, 166.0], [29100.0, 161.0], [29900.0, 169.0], [30700.0, 204.0], [30300.0, 206.0], [31500.0, 206.0], [31100.0, 188.0], [31900.0, 174.0], [32700.0, 161.0], [32300.0, 155.0], [34200.0, 157.0], [33400.0, 175.0], [35000.0, 121.0], [35800.0, 97.0], [36600.0, 114.0], [37400.0, 102.0], [38200.0, 68.0], [40600.0, 55.0], [39000.0, 50.0], [39800.0, 31.0], [41400.0, 31.0], [42200.0, 17.0], [43000.0, 15.0], [44600.0, 6.0], [43800.0, 12.0], [45400.0, 11.0], [46200.0, 6.0], [47000.0, 3.0], [47800.0, 2.0], [48600.0, 2.0], [50200.0, 1.0]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 54800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 149.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 24535.0, "series": [{"data": [[0.0, 149.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19089.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 24535.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 167.21854304635764, "minX": 1.65203556E12, "maxY": 200.0, "series": [{"data": [[1.65203658E12, 200.0], [1.6520388E12, 200.0], [1.65203598E12, 200.0], [1.6520382E12, 200.0], [1.65203616E12, 200.0], [1.65203778E12, 200.0], [1.65203718E12, 200.0], [1.6520364E12, 200.0], [1.65203802E12, 200.0], [1.65203556E12, 167.21854304635764], [1.6520358E12, 200.0], [1.65203742E12, 200.0], [1.6520376E12, 200.0], [1.65203862E12, 200.0], [1.652037E12, 200.0], [1.65203592E12, 200.0], [1.65203754E12, 200.0], [1.65203694E12, 200.0], [1.65203916E12, 167.4852941176471], [1.65203874E12, 200.0], [1.65203712E12, 200.0], [1.65203652E12, 200.0], [1.65203814E12, 200.0], [1.65203736E12, 200.0], [1.65203898E12, 200.0], [1.65203838E12, 200.0], [1.65203676E12, 200.0], [1.65203634E12, 200.0], [1.65203856E12, 200.0], [1.65203574E12, 200.0], [1.65203796E12, 200.0], [1.6520385E12, 200.0], [1.65203688E12, 200.0], [1.65203628E12, 200.0], [1.6520379E12, 200.0], [1.65203568E12, 200.0], [1.65203586E12, 200.0], [1.65203808E12, 200.0], [1.65203748E12, 200.0], [1.6520391E12, 200.0], [1.6520361E12, 200.0], [1.65203832E12, 200.0], [1.65203772E12, 200.0], [1.6520373E12, 200.0], [1.6520367E12, 200.0], [1.65203892E12, 200.0], [1.65203784E12, 200.0], [1.65203724E12, 200.0], [1.65203886E12, 200.0], [1.65203682E12, 200.0], [1.65203904E12, 200.0], [1.65203622E12, 200.0], [1.65203844E12, 200.0], [1.65203706E12, 200.0], [1.65203646E12, 200.0], [1.65203868E12, 200.0], [1.65203664E12, 200.0], [1.65203826E12, 200.0], [1.65203604E12, 200.0], [1.65203562E12, 200.0], [1.65203766E12, 200.0]], "isOverall": false, "label": "API's thread group for performance", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65203916E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 39437.0, "series": [{"data": [[9.0, 280.0], [11.0, 664.0], [12.0, 1020.0], [13.0, 898.0], [18.0, 1588.0], [19.0, 1534.0], [20.0, 785.0], [21.0, 1000.0], [22.0, 1462.0], [24.0, 1468.0], [25.0, 1480.0], [27.0, 1574.0], [31.0, 1301.0], [35.0, 1589.5], [37.0, 2002.0], [38.0, 1614.0], [39.0, 1549.5], [40.0, 1189.0], [41.0, 1087.0], [42.0, 1601.5], [43.0, 2280.0], [53.0, 1814.0], [56.0, 2468.8], [59.0, 2176.0], [60.0, 3766.0], [61.0, 2035.0], [63.0, 2925.5], [64.0, 2108.3333333333335], [66.0, 1457.0], [69.0, 2878.0], [71.0, 2053.0], [72.0, 2926.0], [74.0, 3219.0], [78.0, 3811.5], [79.0, 3461.5], [85.0, 3770.5], [86.0, 1927.5], [87.0, 3877.0], [88.0, 3874.0], [90.0, 3670.0], [92.0, 3575.0], [94.0, 3872.5], [95.0, 3371.0], [96.0, 5679.0], [101.0, 3144.0], [104.0, 4462.0], [106.0, 2441.0], [110.0, 6870.0], [111.0, 5087.8], [113.0, 7666.0], [114.0, 2943.0], [115.0, 4915.0], [117.0, 7143.0], [120.0, 3444.0], [121.0, 5273.0], [122.0, 5530.0], [123.0, 4676.0], [124.0, 6015.5], [126.0, 7955.0], [127.0, 3775.0], [129.0, 4965.0], [131.0, 8173.0], [133.0, 3953.0], [134.0, 4306.0], [135.0, 7384.0], [136.0, 6486.0], [139.0, 5392.0], [143.0, 7856.0], [144.0, 7940.0], [146.0, 7818.5], [147.0, 4845.5], [148.0, 4234.0], [151.0, 8547.0], [156.0, 8277.0], [157.0, 8948.0], [159.0, 6207.0], [160.0, 7524.75], [161.0, 5764.0], [162.0, 4234.0], [163.0, 4435.0], [164.0, 7240.333333333333], [165.0, 7888.0], [166.0, 9413.5], [167.0, 8387.0], [168.0, 5540.0], [170.0, 7767.0], [171.0, 8355.333333333334], [173.0, 6583.5], [178.0, 7183.333333333333], [181.0, 6760.5], [185.0, 8968.0], [188.0, 8802.5], [189.0, 8177.0], [191.0, 9664.0], [192.0, 6925.333333333333], [195.0, 3313.5], [196.0, 5356.5], [197.0, 8675.0], [199.0, 10623.0], [193.0, 906.0], [200.0, 1153.3552928187012]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[199.36599963450146, 1176.9618969298174]], "isOverall": false, "label": "POST Login-Aggregated", "isController": false}, {"data": [[2.0, 14702.0], [3.0, 14287.0], [4.0, 15174.0], [5.0, 14812.0], [6.0, 14515.0], [7.0, 17496.0], [8.0, 15572.0], [9.0, 19029.0], [10.0, 14779.0], [11.0, 18473.0], [12.0, 15061.0], [13.0, 19761.0], [14.0, 22016.0], [15.0, 19061.0], [16.0, 16266.0], [17.0, 15310.0], [18.0, 17940.0], [19.0, 15367.0], [20.0, 20287.0], [21.0, 13071.0], [22.0, 9104.0], [23.0, 7659.666666666667], [24.0, 23009.0], [25.0, 19960.0], [26.0, 17804.0], [27.0, 18973.0], [28.0, 18311.0], [29.0, 19086.0], [30.0, 16283.0], [31.0, 20074.0], [33.0, 18326.0], [32.0, 15739.0], [35.0, 8255.333333333332], [34.0, 18763.0], [37.0, 15087.0], [36.0, 18555.0], [39.0, 9984.0], [38.0, 22132.0], [40.0, 9702.5], [41.0, 10377.666666666666], [42.0, 9548.5], [43.0, 19038.0], [45.0, 16558.0], [44.0, 17059.0], [46.0, 9812.0], [47.0, 25138.0], [49.0, 8801.5], [48.0, 17026.0], [51.0, 21860.0], [50.0, 18025.0], [53.0, 20163.0], [52.0, 25601.0], [55.0, 22563.0], [54.0, 19811.0], [57.0, 19472.0], [56.0, 22065.0], [59.0, 12733.0], [58.0, 24152.0], [61.0, 12072.5], [60.0, 16764.0], [63.0, 18396.0], [62.0, 16658.0], [65.0, 11276.666666666666], [66.0, 10106.0], [67.0, 8668.0], [64.0, 16377.0], [71.0, 12032.0], [70.0, 24077.0], [69.0, 19494.0], [68.0, 20482.0], [75.0, 12921.0], [74.0, 28491.0], [73.0, 22033.0], [72.0, 19757.0], [79.0, 26011.0], [78.0, 25858.0], [77.0, 23247.0], [76.0, 22004.0], [83.0, 13485.0], [82.0, 25186.0], [81.0, 23000.0], [80.0, 20943.0], [85.0, 10269.5], [87.0, 20009.0], [86.0, 21955.0], [84.0, 23938.0], [89.0, 17141.0], [91.0, 13791.0], [90.0, 21878.0], [88.0, 20820.0], [93.0, 7724.25], [94.0, 12387.0], [95.0, 25938.0], [92.0, 28571.0], [99.0, 26507.0], [98.0, 24768.0], [97.0, 28062.0], [96.0, 24148.0], [103.0, 10347.25], [102.0, 21978.0], [101.0, 21846.0], [100.0, 28024.0], [107.0, 29614.0], [106.0, 29576.0], [105.0, 31142.0], [104.0, 21877.0], [111.0, 15267.5], [110.0, 23228.0], [109.0, 26386.0], [108.0, 26249.0], [115.0, 19579.0], [114.0, 26947.0], [113.0, 25839.0], [112.0, 28837.0], [118.0, 15236.5], [117.0, 21050.0], [116.0, 25860.0], [121.0, 18545.5], [123.0, 14680.0], [122.0, 30448.0], [120.0, 25769.5], [127.0, 39437.0], [126.0, 22030.0], [125.0, 27788.0], [124.0, 30178.0], [129.0, 18533.0], [130.0, 18961.5], [135.0, 16780.5], [134.0, 29311.0], [133.0, 22162.0], [132.0, 33812.0], [131.0, 31809.0], [128.0, 29581.0], [143.0, 27033.0], [142.0, 24303.0], [141.0, 32240.0], [140.0, 19979.0], [139.0, 29548.0], [138.0, 25155.0], [137.0, 27827.0], [136.0, 28528.0], [145.0, 15291.0], [146.0, 22531.0], [147.0, 14759.5], [150.0, 19697.5], [151.0, 26966.0], [149.0, 25923.0], [148.0, 19169.0], [144.0, 28982.0], [152.0, 13669.75], [159.0, 34653.0], [158.0, 24911.0], [157.0, 26827.0], [156.0, 28726.0], [155.0, 30676.0], [154.0, 27888.0], [153.0, 29372.0], [160.0, 16978.0], [161.0, 17008.0], [165.0, 14955.0], [166.0, 17856.5], [167.0, 29400.0], [164.0, 27473.0], [163.0, 25152.0], [162.0, 31630.0], [169.0, 20316.5], [171.0, 17404.5], [175.0, 23098.0], [174.0, 26709.0], [173.0, 26048.0], [172.0, 32356.0], [170.0, 28423.0], [168.0, 28619.0], [178.0, 13709.666666666668], [180.0, 16829.333333333332], [183.0, 32184.0], [182.0, 38366.0], [181.0, 26138.0], [179.0, 28919.0], [177.0, 28259.0], [176.0, 32585.0], [188.0, 21178.0], [191.0, 32158.0], [190.0, 27462.0], [189.0, 26874.0], [187.0, 30552.0], [186.0, 32683.0], [185.0, 31478.0], [184.0, 31964.0], [197.0, 19435.0], [199.0, 27376.0], [198.0, 31447.0], [194.0, 34261.0], [192.0, 37610.0], [200.0, 32043.475609192214], [1.0, 17265.0]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}, {"data": [[198.82010509481384, 31897.570847612627]], "isOverall": false, "label": "/api/v3/shifts/availablev3-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3565.516666666667, "minX": 1.65203556E12, "maxY": 104012.08333333333, "series": [{"data": [[1.65203658E12, 99803.93333333333], [1.6520388E12, 100995.21666666666], [1.65203598E12, 99460.33333333333], [1.6520382E12, 96704.21666666666], [1.65203616E12, 84126.8], [1.65203778E12, 101097.4], [1.65203718E12, 83128.9], [1.6520364E12, 98519.36666666667], [1.65203802E12, 78985.48333333334], [1.65203556E12, 67806.01666666666], [1.6520358E12, 93641.28333333334], [1.65203742E12, 101124.83333333333], [1.6520376E12, 85977.05], [1.65203862E12, 104012.08333333333], [1.652037E12, 97678.61666666667], [1.65203592E12, 99919.43333333333], [1.65203754E12, 91404.46666666666], [1.65203694E12, 101125.03333333334], [1.65203916E12, 93658.71666666666], [1.65203874E12, 101393.36666666667], [1.65203712E12, 83028.1], [1.65203652E12, 97162.71666666666], [1.65203814E12, 100902.5], [1.65203736E12, 99476.41666666667], [1.65203898E12, 86902.28333333334], [1.65203838E12, 99342.3], [1.65203676E12, 99870.25], [1.65203634E12, 100329.16666666667], [1.65203856E12, 99803.71666666666], [1.65203574E12, 95313.06666666667], [1.65203796E12, 88253.18333333333], [1.6520385E12, 81034.08333333333], [1.65203688E12, 101388.55], [1.65203628E12, 97224.48333333334], [1.6520379E12, 99796.43333333333], [1.65203568E12, 99108.58333333333], [1.65203586E12, 100020.01666666666], [1.65203808E12, 96498.65], [1.65203748E12, 101523.45], [1.6520391E12, 98382.75], [1.6520361E12, 100994.78333333334], [1.65203832E12, 102584.01666666666], [1.65203772E12, 98222.75], [1.6520373E12, 99074.66666666667], [1.6520367E12, 85053.85], [1.65203892E12, 80969.61666666667], [1.65203784E12, 99931.7], [1.65203724E12, 97159.1], [1.65203886E12, 98725.86666666667], [1.65203682E12, 99737.33333333333], [1.65203904E12, 96828.03333333334], [1.65203622E12, 81432.26666666666], [1.65203844E12, 81946.0], [1.65203706E12, 97668.18333333333], [1.65203646E12, 101187.71666666666], [1.65203868E12, 97340.15], [1.65203664E12, 79715.31666666667], [1.65203826E12, 101386.98333333334], [1.65203604E12, 99670.75], [1.65203562E12, 102777.85], [1.65203766E12, 99602.01666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65203658E12, 4740.533333333334], [1.6520388E12, 4801.183333333333], [1.65203598E12, 4735.45], [1.6520382E12, 4601.95], [1.65203616E12, 3986.45], [1.65203778E12, 4798.483333333334], [1.65203718E12, 3961.4666666666667], [1.6520364E12, 4697.816666666667], [1.65203802E12, 3754.55], [1.65203556E12, 3565.516666666667], [1.6520358E12, 4448.066666666667], [1.65203742E12, 4803.583333333333], [1.6520376E12, 4074.6666666666665], [1.65203862E12, 4944.8], [1.652037E12, 4652.3], [1.65203592E12, 4753.216666666666], [1.65203754E12, 4354.7], [1.65203694E12, 4803.466666666666], [1.65203916E12, 4086.5666666666666], [1.65203874E12, 4823.866666666667], [1.65203712E12, 3943.766666666667], [1.65203652E12, 4614.416666666667], [1.65203814E12, 4783.083333333333], [1.65203736E12, 4730.533333333334], [1.65203898E12, 4122.85], [1.65203838E12, 4720.35], [1.65203676E12, 4745.6], [1.65203634E12, 4757.966666666666], [1.65203856E12, 4740.4], [1.65203574E12, 4526.2], [1.65203796E12, 4206.116666666667], [1.6520385E12, 3857.9333333333334], [1.65203688E12, 4816.116666666667], [1.65203628E12, 4611.866666666667], [1.6520379E12, 4725.066666666667], [1.65203568E12, 4712.683333333333], [1.65203586E12, 4745.4], [1.65203808E12, 4579.083333333333], [1.65203748E12, 4826.283333333334], [1.6520391E12, 4679.783333333334], [1.6520361E12, 4801.133333333333], [1.65203832E12, 4884.416666666667], [1.65203772E12, 4672.483333333334], [1.6520373E12, 4700.05], [1.6520367E12, 4034.4666666666667], [1.65203892E12, 3860.45], [1.65203784E12, 4763.383333333333], [1.65203724E12, 4606.666666666667], [1.65203886E12, 4684.933333333333], [1.65203682E12, 4735.383333333333], [1.65203904E12, 4589.033333333334], [1.65203622E12, 3880.7833333333333], [1.65203844E12, 3880.6], [1.65203706E12, 4634.533333333334], [1.65203646E12, 4800.866666666667], [1.65203868E12, 4619.233333333334], [1.65203664E12, 3802.5333333333333], [1.65203826E12, 4808.4], [1.65203604E12, 4730.3], [1.65203562E12, 4884.25], [1.65203766E12, 4725.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65203916E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 954.2330097087378, "minX": 1.65203556E12, "maxY": 39284.17391304347, "series": [{"data": [[1.65203658E12, 1113.2287234042553], [1.6520388E12, 1056.8691099476432], [1.65203598E12, 1033.4213333333337], [1.6520382E12, 1102.418478260869], [1.65203616E12, 967.2476190476186], [1.65203778E12, 1059.31052631579], [1.65203718E12, 994.6772151898737], [1.6520364E12, 1093.1813333333328], [1.65203802E12, 989.1993243243246], [1.65203556E12, 5292.697500000002], [1.6520358E12, 1093.6242937853108], [1.65203742E12, 1137.0682414698167], [1.6520376E12, 987.7453416149078], [1.65203862E12, 2971.0507614213207], [1.652037E12, 1049.5609756097556], [1.65203592E12, 1062.3710526315783], [1.65203754E12, 991.9132947976873], [1.65203694E12, 1072.383202099737], [1.65203916E12, 1118.7699530516436], [1.65203874E12, 1093.0857142857144], [1.65203712E12, 1022.3439490445861], [1.65203652E12, 1042.7185792349733], [1.65203814E12, 1110.530503978778], [1.65203736E12, 992.6419098143231], [1.65203898E12, 1038.535168195719], [1.65203838E12, 1103.2373333333342], [1.65203676E12, 1069.4376657824926], [1.65203634E12, 1080.5893333333322], [1.65203856E12, 1088.287234042552], [1.65203574E12, 1093.4651810584955], [1.65203796E12, 1045.4926253687313], [1.6520385E12, 994.8725490196074], [1.65203688E12, 1076.303664921467], [1.65203628E12, 1087.0796703296705], [1.6520379E12, 1075.4702702702714], [1.65203568E12, 1107.2553763440847], [1.65203586E12, 1120.9812834224592], [1.65203808E12, 1044.6353591160228], [1.65203748E12, 1170.3697916666663], [1.6520391E12, 1067.0081081081069], [1.6520361E12, 1160.1832460732985], [1.65203832E12, 1083.2225063938615], [1.65203772E12, 1070.2627345844514], [1.6520373E12, 1048.2425876010782], [1.6520367E12, 1027.4406249999993], [1.65203892E12, 996.7402597402597], [1.65203784E12, 1047.19788918206], [1.65203724E12, 1089.4435261707983], [1.65203886E12, 1041.1132075471726], [1.65203682E12, 1085.7413333333327], [1.65203904E12, 1087.8864265927982], [1.65203622E12, 954.2330097087378], [1.65203844E12, 1006.9313725490194], [1.65203706E12, 1048.3378746594005], [1.65203646E12, 1054.1240105540885], [1.65203868E12, 1114.4792243767308], [1.65203664E12, 1002.9967105263154], [1.65203826E12, 1067.8390501319263], [1.65203604E12, 1044.7005347593577], [1.65203562E12, 1117.956185567011], [1.65203766E12, 1138.3860589812339]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.65203658E12, 30732.827127659588], [1.6520388E12, 30994.121052631577], [1.65203598E12, 30868.646276595737], [1.6520382E12, 30830.595041322304], [1.65203616E12, 34401.73501577291], [1.65203778E12, 30599.377952755895], [1.65203718E12, 37932.70926517571], [1.6520364E12, 31201.544474393537], [1.65203802E12, 39284.17391304347], [1.65203556E12, 12188.215686274503], [1.6520358E12, 34044.51420454542], [1.65203742E12, 30795.895013123347], [1.6520376E12, 36828.67592592592], [1.65203862E12, 29458.05626598465], [1.652037E12, 31102.981029810293], [1.65203592E12, 30431.733333333334], [1.65203754E12, 31222.05797101449], [1.65203694E12, 30829.31233595799], [1.65203916E12, 27715.952380952393], [1.65203874E12, 30546.818897637786], [1.65203712E12, 35618.083333333314], [1.65203652E12, 30877.19398907103], [1.65203814E12, 30827.27296587926], [1.65203736E12, 31205.44652406418], [1.65203898E12, 36832.78899082573], [1.65203838E12, 30673.631016042775], [1.65203676E12, 31630.010638297877], [1.65203634E12, 30532.852242744062], [1.65203856E12, 32379.345744680868], [1.65203574E12, 31098.30640668522], [1.65203796E12, 32432.551515151506], [1.6520385E12, 39110.915032679746], [1.65203688E12, 30686.09162303665], [1.65203628E12, 33125.43324250683], [1.6520379E12, 31047.391534391532], [1.65203568E12, 30589.66933333335], [1.65203586E12, 30819.98677248678], [1.65203808E12, 34475.837912087896], [1.65203748E12, 30323.89528795812], [1.6520391E12, 30680.505376344077], [1.6520361E12, 30778.042105263172], [1.65203832E12, 30620.5090909091], [1.65203772E12, 30727.59620596206], [1.6520373E12, 30593.775401069517], [1.6520367E12, 38386.325], [1.65203892E12, 35816.67213114754], [1.65203784E12, 30677.91511936339], [1.65203724E12, 33102.2670299728], [1.65203886E12, 30328.76075268818], [1.65203682E12, 30407.523936170222], [1.65203904E12, 33292.9617486339], [1.65203622E12, 38632.537459283354], [1.65203844E12, 35348.035598705515], [1.65203706E12, 30910.6304347826], [1.65203646E12, 31173.88219895289], [1.65203868E12, 29097.21891891891], [1.65203664E12, 36510.356666666674], [1.65203826E12, 30422.28720626634], [1.65203604E12, 31030.83244680852], [1.65203562E12, 30495.02583979328], [1.65203766E12, 32804.25797872339]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65203916E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 954.1974110032362, "minX": 1.65203556E12, "maxY": 39283.82608695651, "series": [{"data": [[1.65203658E12, 1113.2101063829784], [1.6520388E12, 1056.8455497382197], [1.65203598E12, 1033.394666666666], [1.6520382E12, 1102.4021739130444], [1.65203616E12, 967.2222222222225], [1.65203778E12, 1059.2947368421046], [1.65203718E12, 994.6645569620255], [1.6520364E12, 1093.1573333333338], [1.65203802E12, 989.1824324324322], [1.65203556E12, 5292.5975], [1.6520358E12, 1093.593220338982], [1.65203742E12, 1137.03412073491], [1.6520376E12, 987.6273291925461], [1.65203862E12, 2971.0253807106596], [1.652037E12, 1049.5555555555547], [1.65203592E12, 1062.3473684210528], [1.65203754E12, 991.8959537572263], [1.65203694E12, 1072.3622047244085], [1.65203916E12, 1118.7417840375592], [1.65203874E12, 1093.0649350649342], [1.65203712E12, 1022.3343949044585], [1.65203652E12, 1042.6448087431697], [1.65203814E12, 1110.5039787798405], [1.65203736E12, 992.6180371352785], [1.65203898E12, 1038.5290519877667], [1.65203838E12, 1103.224000000001], [1.65203676E12, 1069.4058355437674], [1.65203634E12, 1080.5653333333325], [1.65203856E12, 1088.2739361702124], [1.65203574E12, 1093.4568245125347], [1.65203796E12, 1045.466076696164], [1.6520385E12, 994.8496732026147], [1.65203688E12, 1076.2801047120424], [1.65203628E12, 1087.0659340659342], [1.6520379E12, 1075.4513513513525], [1.65203568E12, 1107.2123655913974], [1.65203586E12, 1120.938502673797], [1.65203808E12, 1044.5690607734814], [1.65203748E12, 1170.354166666666], [1.6520391E12, 1066.991891891892], [1.6520361E12, 1160.17277486911], [1.65203832E12, 1083.2020460358058], [1.65203772E12, 1070.2412868632716], [1.6520373E12, 1048.2156334231797], [1.6520367E12, 1027.409375], [1.65203892E12, 996.7142857142859], [1.65203784E12, 1047.1715039577832], [1.65203724E12, 1089.4297520661162], [1.65203886E12, 1041.0835579514833], [1.65203682E12, 1085.7280000000007], [1.65203904E12, 1087.6509695290858], [1.65203622E12, 954.1974110032362], [1.65203844E12, 1006.9150326797384], [1.65203706E12, 1048.307901907358], [1.65203646E12, 1054.1134564643792], [1.65203868E12, 1114.4459833795015], [1.65203664E12, 1002.9802631578941], [1.65203826E12, 1067.8205804749332], [1.65203604E12, 1044.6737967914437], [1.65203562E12, 1117.902061855671], [1.65203766E12, 1138.359249329758]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.65203658E12, 30731.79521276596], [1.6520388E12, 30993.005263157876], [1.65203598E12, 30868.186170212757], [1.6520382E12, 30829.95867768596], [1.65203616E12, 34400.96214511045], [1.65203778E12, 30598.53280839895], [1.65203718E12, 37932.61022364219], [1.6520364E12, 31200.652291105114], [1.65203802E12, 39283.82608695651], [1.65203556E12, 12186.029411764704], [1.6520358E12, 34044.261363636346], [1.65203742E12, 30794.666666666664], [1.6520376E12, 36827.99999999996], [1.65203862E12, 29456.493606138112], [1.652037E12, 31102.37398373985], [1.65203592E12, 30431.13866666667], [1.65203754E12, 31220.866666666647], [1.65203694E12, 30828.603674540682], [1.65203916E12, 27715.057644110297], [1.65203874E12, 30545.56430446195], [1.65203712E12, 35617.80448717949], [1.65203652E12, 30876.50819672131], [1.65203814E12, 30826.82677165355], [1.65203736E12, 31204.524064171128], [1.65203898E12, 36831.78593272167], [1.65203838E12, 30672.885026737964], [1.65203676E12, 31629.539893617028], [1.65203634E12, 30532.501319261206], [1.65203856E12, 32378.757978723424], [1.65203574E12, 31096.938718662946], [1.65203796E12, 32432.063636363673], [1.6520385E12, 39109.25490196079], [1.65203688E12, 30685.641361256534], [1.65203628E12, 33125.384196185296], [1.6520379E12, 31046.57142857142], [1.65203568E12, 30588.69866666668], [1.65203586E12, 30819.052910052913], [1.65203808E12, 34475.30219780218], [1.65203748E12, 30322.557591623023], [1.6520391E12, 30679.594086021487], [1.6520361E12, 30777.197368421057], [1.65203832E12, 30619.44415584417], [1.65203772E12, 30726.024390243896], [1.6520373E12, 30592.42513368987], [1.6520367E12, 38385.515625000015], [1.65203892E12, 35816.40655737706], [1.65203784E12, 30677.02917771883], [1.65203724E12, 33101.59945504088], [1.65203886E12, 30328.010752688144], [1.65203682E12, 30407.042553191503], [1.65203904E12, 33292.29781420764], [1.65203622E12, 38632.4755700326], [1.65203844E12, 35347.521035598686], [1.65203706E12, 30909.290760869557], [1.65203646E12, 31172.27486910993], [1.65203868E12, 29096.305405405405], [1.65203664E12, 36510.086666666655], [1.65203826E12, 30421.838120104447], [1.65203604E12, 31030.57180851064], [1.65203562E12, 30493.689922480637], [1.65203766E12, 32802.72340425532]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65203916E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65203556E12, "maxY": 8.630000000000003, "series": [{"data": [[1.65203658E12, 1.7393617021276575], [1.6520388E12, 2.75392670157068], [1.65203598E12, 3.2666666666666644], [1.6520382E12, 1.7744565217391315], [1.65203616E12, 2.879365079365079], [1.65203778E12, 1.4526315789473683], [1.65203718E12, 3.246835443037975], [1.6520364E12, 1.5919999999999992], [1.65203802E12, 2.3986486486486505], [1.65203556E12, 8.630000000000003], [1.6520358E12, 2.6497175141242906], [1.65203742E12, 1.5879265091863521], [1.6520376E12, 2.0869565217391313], [1.65203862E12, 1.517766497461931], [1.652037E12, 2.8509485094850944], [1.65203592E12, 3.3657894736842118], [1.65203754E12, 1.754335260115607], [1.65203694E12, 1.774278215223098], [1.65203916E12, 1.854460093896713], [1.65203874E12, 1.8207792207792213], [1.65203712E12, 2.4044585987261167], [1.65203652E12, 1.8360655737704918], [1.65203814E12, 1.6843501326259953], [1.65203736E12, 2.70557029177719], [1.65203898E12, 2.5259938837920495], [1.65203838E12, 1.6773333333333331], [1.65203676E12, 3.145888594164455], [1.65203634E12, 1.421333333333334], [1.65203856E12, 2.0585106382978715], [1.65203574E12, 2.7103064066852345], [1.65203796E12, 2.3864306784660743], [1.6520385E12, 2.8398692810457495], [1.65203688E12, 1.7303664921465969], [1.65203628E12, 1.8983516483516472], [1.6520379E12, 2.7567567567567557], [1.65203568E12, 1.7204301075268813], [1.65203586E12, 3.1764705882352926], [1.65203808E12, 2.32596685082873], [1.65203748E12, 1.6744791666666667], [1.6520391E12, 1.9027027027027033], [1.6520361E12, 2.7565445026178015], [1.65203832E12, 2.1841432225063966], [1.65203772E12, 2.5201072386059], [1.6520373E12, 1.973045822102426], [1.6520367E12, 3.3687500000000017], [1.65203892E12, 1.948051948051948], [1.65203784E12, 2.002638522427441], [1.65203724E12, 1.7024793388429749], [1.65203886E12, 2.390835579514825], [1.65203682E12, 1.4639999999999995], [1.65203904E12, 2.0692520775623273], [1.65203622E12, 2.8220064724919096], [1.65203844E12, 2.153594771241829], [1.65203706E12, 1.40599455040872], [1.65203646E12, 2.8627968337730865], [1.65203868E12, 1.8642659279778393], [1.65203664E12, 2.592105263157895], [1.65203826E12, 1.5224274406332434], [1.65203604E12, 3.4732620320855596], [1.65203562E12, 2.523195876288657], [1.65203766E12, 1.836461126005361]], "isOverall": false, "label": "POST Login", "isController": false}, {"data": [[1.65203658E12, 0.22340425531914898], [1.6520388E12, 0.17105263157894737], [1.65203598E12, 0.24202127659574457], [1.6520382E12, 0.07988980716253445], [1.65203616E12, 0.08201892744479496], [1.65203778E12, 0.199475065616798], [1.65203718E12, 0.0], [1.6520364E12, 0.06469002695417789], [1.65203802E12, 0.010033444816053519], [1.65203556E12, 0.0], [1.6520358E12, 0.2073863636363637], [1.65203742E12, 0.120734908136483], [1.6520376E12, 0.018518518518518507], [1.65203862E12, 0.07928388746803071], [1.652037E12, 0.08130081300813011], [1.65203592E12, 0.14666666666666672], [1.65203754E12, 0.11304347826086955], [1.65203694E12, 0.0446194225721785], [1.65203916E12, 0.03007518796992484], [1.65203874E12, 0.036745406824146995], [1.65203712E12, 0.16987179487179488], [1.65203652E12, 0.16939890710382516], [1.65203814E12, 0.010498687664041995], [1.65203736E12, 0.23529411764705882], [1.65203898E12, 0.006116207951070333], [1.65203838E12, 0.05614973262032084], [1.65203676E12, 0.03723404255319149], [1.65203634E12, 0.05804749340369393], [1.65203856E12, 0.00797872340425532], [1.65203574E12, 0.06406685236768808], [1.65203796E12, 0.2151515151515152], [1.6520385E12, 0.0], [1.65203688E12, 0.06806282722513089], [1.65203628E12, 0.0], [1.6520379E12, 0.32275132275132284], [1.65203568E12, 0.02933333333333334], [1.65203586E12, 0.04761904761904764], [1.65203808E12, 0.0], [1.65203748E12, 0.09685863874345556], [1.6520391E12, 0.16129032258064527], [1.6520361E12, 0.307894736842105], [1.65203832E12, 0.21818181818181812], [1.65203772E12, 0.21138211382113814], [1.6520373E12, 0.0588235294117647], [1.6520367E12, 0.0], [1.65203892E12, 0.2327868852459017], [1.65203784E12, 0.04244031830238729], [1.65203724E12, 0.0], [1.65203886E12, 0.20698924731182805], [1.65203682E12, 0.05585106382978727], [1.65203904E12, 0.0], [1.65203622E12, 0.04560260586319223], [1.65203844E12, 0.0744336569579288], [1.65203706E12, 0.09239130434782608], [1.65203646E12, 0.06282722513089006], [1.65203868E12, 0.17027027027027028], [1.65203664E12, 0.14333333333333337], [1.65203826E12, 0.06005221932114884], [1.65203604E12, 0.1063829787234042], [1.65203562E12, 0.0671834625322997], [1.65203766E12, 0.0026595744680851063]], "isOverall": false, "label": "/api/v3/shifts/availablev3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65203916E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 280.0, "minX": 1.65203556E12, "maxY": 54867.0, "series": [{"data": [[1.65203658E12, 43790.0], [1.6520388E12, 40671.0], [1.65203598E12, 41996.0], [1.6520382E12, 42477.0], [1.65203616E12, 47760.0], [1.65203778E12, 40479.0], [1.65203718E12, 50944.0], [1.6520364E12, 44016.0], [1.65203802E12, 50748.0], [1.65203556E12, 28607.0], [1.6520358E12, 45420.0], [1.65203742E12, 40694.0], [1.6520376E12, 49020.0], [1.65203862E12, 53335.0], [1.652037E12, 41452.0], [1.65203592E12, 41733.0], [1.65203754E12, 43044.0], [1.65203694E12, 42761.0], [1.65203916E12, 44732.0], [1.65203874E12, 42731.0], [1.65203712E12, 50718.0], [1.65203652E12, 41039.0], [1.65203814E12, 43772.0], [1.65203736E12, 43025.0], [1.65203898E12, 47693.0], [1.65203838E12, 42570.0], [1.65203676E12, 45710.0], [1.65203634E12, 42593.0], [1.65203856E12, 46701.0], [1.65203574E12, 42996.0], [1.65203796E12, 45525.0], [1.6520385E12, 50374.0], [1.65203688E12, 41103.0], [1.65203628E12, 46467.0], [1.6520379E12, 41837.0], [1.65203568E12, 40725.0], [1.65203586E12, 38255.0], [1.65203808E12, 48185.0], [1.65203748E12, 40903.0], [1.6520391E12, 41258.0], [1.6520361E12, 43600.0], [1.65203832E12, 45827.0], [1.65203772E12, 41750.0], [1.6520373E12, 41184.0], [1.6520367E12, 52788.0], [1.65203892E12, 50038.0], [1.65203784E12, 42795.0], [1.65203724E12, 45373.0], [1.65203886E12, 40190.0], [1.65203682E12, 42192.0], [1.65203904E12, 48289.0], [1.65203622E12, 54867.0], [1.65203844E12, 48483.0], [1.65203706E12, 42836.0], [1.65203646E12, 43540.0], [1.65203868E12, 38290.0], [1.65203664E12, 48823.0], [1.65203826E12, 43552.0], [1.65203604E12, 44236.0], [1.65203562E12, 42025.0], [1.65203766E12, 46328.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65203658E12, 34006.0], [1.6520388E12, 33989.700000000004], [1.65203598E12, 34066.8], [1.6520382E12, 33852.600000000006], [1.65203616E12, 38487.5], [1.65203778E12, 33863.200000000004], [1.65203718E12, 40936.0], [1.6520364E12, 34111.9], [1.65203802E12, 42577.2], [1.65203556E12, 15899.0], [1.6520358E12, 38698.4], [1.65203742E12, 34024.4], [1.6520376E12, 40116.4], [1.65203862E12, 34317.2], [1.652037E12, 33917.100000000006], [1.65203592E12, 33366.2], [1.65203754E12, 34678.00000000001], [1.65203694E12, 33904.5], [1.65203916E12, 33589.8], [1.65203874E12, 33442.5], [1.65203712E12, 39741.8], [1.65203652E12, 34004.2], [1.65203814E12, 34136.600000000006], [1.65203736E12, 34539.0], [1.65203898E12, 40225.0], [1.65203838E12, 34316.0], [1.65203676E12, 35040.2], [1.65203634E12, 33642.5], [1.65203856E12, 35917.9], [1.65203574E12, 34368.0], [1.65203796E12, 36611.0], [1.6520385E12, 42917.200000000004], [1.65203688E12, 33492.5], [1.65203628E12, 36213.8], [1.6520379E12, 34225.9], [1.65203568E12, 33649.4], [1.65203586E12, 33795.200000000004], [1.65203808E12, 38628.8], [1.65203748E12, 33681.3], [1.6520391E12, 33501.8], [1.6520361E12, 33815.8], [1.65203832E12, 33817.1], [1.65203772E12, 33584.0], [1.6520373E12, 33902.2], [1.6520367E12, 42342.6], [1.65203892E12, 39232.2], [1.65203784E12, 33504.3], [1.65203724E12, 36833.0], [1.65203886E12, 33344.0], [1.65203682E12, 33620.8], [1.65203904E12, 37250.6], [1.65203622E12, 41898.700000000004], [1.65203844E12, 38852.6], [1.65203706E12, 33725.4], [1.65203646E12, 34607.200000000004], [1.65203868E12, 32207.800000000003], [1.65203664E12, 40364.5], [1.65203826E12, 33485.0], [1.65203604E12, 34272.2], [1.65203562E12, 33999.6], [1.65203766E12, 36364.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65203658E12, 39439.46000000001], [1.6520388E12, 38958.48], [1.65203598E12, 38796.840000000004], [1.6520382E12, 39781.84], [1.65203616E12, 44038.72], [1.65203778E12, 38543.56], [1.65203718E12, 47872.60000000002], [1.6520364E12, 40405.77], [1.65203802E12, 48153.67999999998], [1.65203556E12, 24689.35000000003], [1.6520358E12, 43568.869999999995], [1.65203742E12, 38349.41], [1.6520376E12, 46169.299999999996], [1.65203862E12, 45188.99999999999], [1.652037E12, 38778.14], [1.65203592E12, 38617.15999999997], [1.65203754E12, 40561.600000000006], [1.65203694E12, 38727.0], [1.65203916E12, 40424.8], [1.65203874E12, 38403.97000000003], [1.65203712E12, 46691.28], [1.65203652E12, 38552.84999999998], [1.65203814E12, 39388.31], [1.65203736E12, 38650.200000000004], [1.65203898E12, 45710.50000000001], [1.65203838E12, 38800.0], [1.65203676E12, 41238.66], [1.65203634E12, 38231.30000000001], [1.65203856E12, 41116.04], [1.65203574E12, 38900.44999999999], [1.65203796E12, 42101.29999999999], [1.6520385E12, 49682.54], [1.65203688E12, 38379.75000000001], [1.65203628E12, 42111.719999999994], [1.6520379E12, 39905.1], [1.65203568E12, 38609.839999999975], [1.65203586E12, 37475.46], [1.65203808E12, 46156.69000000002], [1.65203748E12, 37916.70000000001], [1.6520391E12, 38579.320000000014], [1.6520361E12, 38858.840000000004], [1.65203832E12, 38976.200000000004], [1.65203772E12, 38202.75000000002], [1.6520373E12, 38548.61999999999], [1.6520367E12, 48232.900000000016], [1.65203892E12, 44956.0], [1.65203784E12, 38586.44], [1.65203724E12, 42268.89999999999], [1.65203886E12, 38562.2], [1.65203682E12, 38087.56000000002], [1.65203904E12, 43386.00000000001], [1.65203622E12, 48835.14000000003], [1.65203844E12, 45367.040000000015], [1.65203706E12, 39595.119999999995], [1.65203646E12, 39345.119999999995], [1.65203868E12, 36387.63999999999], [1.65203664E12, 45684.75000000003], [1.65203826E12, 38118.840000000004], [1.65203604E12, 39253.83], [1.65203562E12, 38949.72000000001], [1.65203766E12, 42446.5]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65203658E12, 35550.75], [1.6520388E12, 35434.95], [1.65203598E12, 35654.6], [1.6520382E12, 35475.4], [1.65203616E12, 40731.0], [1.65203778E12, 35945.4], [1.65203718E12, 43070.0], [1.6520364E12, 36589.7], [1.65203802E12, 44396.0], [1.65203556E12, 19888.5], [1.6520358E12, 40785.049999999996], [1.65203742E12, 35644.7], [1.6520376E12, 42191.899999999994], [1.65203862E12, 39110.19999999996], [1.652037E12, 35810.399999999994], [1.65203592E12, 35212.0], [1.65203754E12, 36324.6], [1.65203694E12, 35576.3], [1.65203916E12, 36003.35], [1.65203874E12, 35023.95], [1.65203712E12, 41915.3], [1.65203652E12, 35604.65], [1.65203814E12, 36007.2], [1.65203736E12, 36461.8], [1.65203898E12, 42136.75], [1.65203838E12, 35878.5], [1.65203676E12, 37187.69999999999], [1.65203634E12, 34945.25], [1.65203856E12, 37875.3], [1.65203574E12, 35620.65], [1.65203796E12, 38338.5], [1.6520385E12, 45710.15], [1.65203688E12, 35105.25], [1.65203628E12, 38667.0], [1.6520379E12, 35956.35], [1.65203568E12, 35459.2], [1.65203586E12, 35490.65000000001], [1.65203808E12, 41335.35], [1.65203748E12, 35318.9], [1.6520391E12, 35315.55], [1.6520361E12, 35799.1], [1.65203832E12, 35255.049999999996], [1.65203772E12, 35433.50000000001], [1.6520373E12, 35765.299999999996], [1.6520367E12, 44235.45], [1.65203892E12, 40802.9], [1.65203784E12, 35195.5], [1.65203724E12, 38862.6], [1.65203886E12, 34951.2], [1.65203682E12, 35270.0], [1.65203904E12, 39913.4], [1.65203622E12, 43975.149999999994], [1.65203844E12, 41203.199999999975], [1.65203706E12, 35434.199999999975], [1.65203646E12, 36071.299999999996], [1.65203868E12, 33879.99999999999], [1.65203664E12, 42114.5], [1.65203826E12, 34938.350000000006], [1.65203604E12, 36090.9], [1.65203562E12, 35493.4], [1.65203766E12, 38512.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65203658E12, 491.0], [1.6520388E12, 482.0], [1.65203598E12, 442.0], [1.6520382E12, 424.0], [1.65203616E12, 396.0], [1.65203778E12, 394.0], [1.65203718E12, 427.0], [1.6520364E12, 445.0], [1.65203802E12, 459.0], [1.65203556E12, 280.0], [1.6520358E12, 367.0], [1.65203742E12, 458.0], [1.6520376E12, 476.0], [1.65203862E12, 470.0], [1.652037E12, 447.0], [1.65203592E12, 464.0], [1.65203754E12, 398.0], [1.65203694E12, 395.0], [1.65203916E12, 353.0], [1.65203874E12, 428.0], [1.65203712E12, 442.0], [1.65203652E12, 475.0], [1.65203814E12, 412.0], [1.65203736E12, 461.0], [1.65203898E12, 469.0], [1.65203838E12, 427.0], [1.65203676E12, 370.0], [1.65203634E12, 452.0], [1.65203856E12, 362.0], [1.65203574E12, 479.0], [1.65203796E12, 393.0], [1.6520385E12, 451.0], [1.65203688E12, 438.0], [1.65203628E12, 517.0], [1.6520379E12, 318.0], [1.65203568E12, 433.0], [1.65203586E12, 408.0], [1.65203808E12, 466.0], [1.65203748E12, 388.0], [1.6520391E12, 341.0], [1.6520361E12, 444.0], [1.65203832E12, 500.0], [1.65203772E12, 486.0], [1.6520373E12, 440.0], [1.6520367E12, 445.0], [1.65203892E12, 426.0], [1.65203784E12, 452.0], [1.65203724E12, 428.0], [1.65203886E12, 502.0], [1.65203682E12, 493.0], [1.65203904E12, 416.0], [1.65203622E12, 527.0], [1.65203844E12, 481.0], [1.65203706E12, 416.0], [1.65203646E12, 443.0], [1.65203868E12, 377.0], [1.65203664E12, 481.0], [1.65203826E12, 432.0], [1.65203604E12, 394.0], [1.65203562E12, 350.0], [1.65203766E12, 502.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65203658E12, 11741.0], [1.6520388E12, 1994.0], [1.65203598E12, 18705.0], [1.6520382E12, 2342.0], [1.65203616E12, 21419.5], [1.65203778E12, 21430.0], [1.65203718E12, 1798.0], [1.6520364E12, 2417.5], [1.65203802E12, 28293.0], [1.65203556E12, 6895.0], [1.6520358E12, 2669.5], [1.65203742E12, 11259.0], [1.6520376E12, 26502.5], [1.65203862E12, 15594.0], [1.652037E12, 11868.5], [1.65203592E12, 2101.0], [1.65203754E12, 2072.0], [1.65203694E12, 12237.0], [1.65203916E12, 23833.5], [1.65203874E12, 2330.5], [1.65203712E12, 2162.5], [1.65203652E12, 11599.0], [1.65203814E12, 21481.0], [1.65203736E12, 1719.0], [1.65203898E12, 13539.0], [1.65203838E12, 2857.0], [1.65203676E12, 2391.0], [1.65203634E12, 22416.5], [1.65203856E12, 12027.5], [1.65203574E12, 11839.0], [1.65203796E12, 1981.0], [1.6520385E12, 14957.0], [1.65203688E12, 11646.5], [1.65203628E12, 23976.0], [1.6520379E12, 23170.5], [1.65203568E12, 21727.0], [1.65203586E12, 22730.0], [1.65203808E12, 23184.5], [1.65203748E12, 3260.5], [1.6520391E12, 22517.0], [1.6520361E12, 3117.5], [1.65203832E12, 2111.5], [1.65203772E12, 2183.5], [1.6520373E12, 20566.0], [1.6520367E12, 13987.5], [1.65203892E12, 1926.0], [1.65203784E12, 2220.0], [1.65203724E12, 23618.5], [1.65203886E12, 21856.0], [1.65203682E12, 19388.0], [1.65203904E12, 21455.0], [1.65203622E12, 1745.5], [1.65203844E12, 25057.0], [1.65203706E12, 21388.0], [1.65203646E12, 23250.0], [1.65203868E12, 21618.0], [1.65203664E12, 2014.5], [1.65203826E12, 22108.0], [1.65203604E12, 20556.5], [1.65203562E12, 2888.0], [1.65203766E12, 21774.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65203916E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1204.5, "minX": 2.0, "maxY": 24870.0, "series": [{"data": [[2.0, 19004.0], [3.0, 2243.0], [48.0, 17872.0], [61.0, 8740.0], [4.0, 1204.5], [5.0, 23098.0], [6.0, 23340.0], [7.0, 24870.0], [8.0, 24755.5], [9.0, 23146.0], [10.0, 24213.5], [11.0, 22289.0], [12.0, 2317.0], [13.0, 7680.5], [14.0, 11800.0], [15.0, 20820.0], [16.0, 2433.5], [17.0, 2168.5], [18.0, 1964.5], [19.0, 2065.0], [20.0, 2616.0], [21.0, 2101.5], [22.0, 8928.5], [23.0, 9972.0], [24.0, 2416.0], [25.0, 2128.5], [27.0, 8457.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 61.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1204.5, "minX": 2.0, "maxY": 24870.0, "series": [{"data": [[2.0, 19004.0], [3.0, 2242.5], [48.0, 17872.0], [61.0, 8740.0], [4.0, 1204.5], [5.0, 23098.0], [6.0, 23340.0], [7.0, 24870.0], [8.0, 24755.5], [9.0, 23146.0], [10.0, 24213.5], [11.0, 22289.0], [12.0, 2317.0], [13.0, 7639.0], [14.0, 11800.0], [15.0, 20820.0], [16.0, 2433.5], [17.0, 2168.5], [18.0, 1964.5], [19.0, 2065.0], [20.0, 2616.0], [21.0, 2101.5], [22.0, 8928.5], [23.0, 9972.0], [24.0, 2415.5], [25.0, 2128.5], [27.0, 8457.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 61.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.866666666666666, "minX": 1.65203556E12, "maxY": 13.4, "series": [{"data": [[1.65203658E12, 12.516666666666667], [1.6520388E12, 12.7], [1.65203598E12, 12.516666666666667], [1.6520382E12, 12.183333333333334], [1.65203616E12, 10.533333333333333], [1.65203778E12, 12.683333333333334], [1.65203718E12, 10.483333333333333], [1.6520364E12, 12.433333333333334], [1.65203802E12, 9.916666666666666], [1.65203556E12, 13.4], [1.6520358E12, 11.766666666666667], [1.65203742E12, 12.7], [1.6520376E12, 10.766666666666667], [1.65203862E12, 13.083333333333334], [1.652037E12, 12.3], [1.65203592E12, 12.583333333333334], [1.65203754E12, 11.516666666666667], [1.65203694E12, 12.7], [1.65203916E12, 6.866666666666666], [1.65203874E12, 12.766666666666667], [1.65203712E12, 10.433333333333334], [1.65203652E12, 12.2], [1.65203814E12, 12.633333333333333], [1.65203736E12, 12.516666666666667], [1.65203898E12, 10.9], [1.65203838E12, 12.483333333333333], [1.65203676E12, 12.55], [1.65203634E12, 12.566666666666666], [1.65203856E12, 12.533333333333333], [1.65203574E12, 11.966666666666667], [1.65203796E12, 11.15], [1.6520385E12, 10.2], [1.65203688E12, 12.733333333333333], [1.65203628E12, 12.183333333333334], [1.6520379E12, 12.466666666666667], [1.65203568E12, 12.45], [1.65203586E12, 12.533333333333333], [1.65203808E12, 12.1], [1.65203748E12, 12.766666666666667], [1.6520391E12, 12.366666666666667], [1.6520361E12, 12.7], [1.65203832E12, 12.933333333333334], [1.65203772E12, 12.366666666666667], [1.6520373E12, 12.416666666666666], [1.6520367E12, 10.666666666666666], [1.65203892E12, 10.216666666666667], [1.65203784E12, 12.6], [1.65203724E12, 12.166666666666666], [1.65203886E12, 12.383333333333333], [1.65203682E12, 12.516666666666667], [1.65203904E12, 12.116666666666667], [1.65203622E12, 10.266666666666667], [1.65203844E12, 10.25], [1.65203706E12, 12.25], [1.65203646E12, 12.683333333333334], [1.65203868E12, 12.183333333333334], [1.65203664E12, 10.083333333333334], [1.65203826E12, 12.7], [1.65203604E12, 12.5], [1.65203562E12, 12.916666666666666], [1.65203766E12, 12.483333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65203916E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.916666666666666, "minX": 1.65203556E12, "maxY": 13.083333333333334, "series": [{"data": [[1.65203658E12, 12.533333333333333], [1.6520388E12, 12.7], [1.65203598E12, 12.516666666666667], [1.6520382E12, 12.183333333333334], [1.65203616E12, 10.533333333333333], [1.65203778E12, 12.683333333333334], [1.65203718E12, 10.483333333333333], [1.6520364E12, 12.433333333333334], [1.65203802E12, 9.916666666666666], [1.65203556E12, 10.066666666666666], [1.6520358E12, 11.766666666666667], [1.65203742E12, 12.7], [1.6520376E12, 10.766666666666667], [1.65203862E12, 13.083333333333334], [1.652037E12, 12.3], [1.65203592E12, 12.583333333333334], [1.65203754E12, 11.516666666666667], [1.65203694E12, 12.7], [1.65203916E12, 10.2], [1.65203874E12, 12.766666666666667], [1.65203712E12, 10.433333333333334], [1.65203652E12, 12.2], [1.65203814E12, 12.633333333333333], [1.65203736E12, 12.516666666666667], [1.65203898E12, 10.9], [1.65203838E12, 12.483333333333333], [1.65203676E12, 12.55], [1.65203634E12, 12.566666666666666], [1.65203856E12, 12.533333333333333], [1.65203574E12, 11.966666666666667], [1.65203796E12, 11.15], [1.6520385E12, 10.2], [1.65203688E12, 12.733333333333333], [1.65203628E12, 12.183333333333334], [1.6520379E12, 12.466666666666667], [1.65203568E12, 12.45], [1.65203586E12, 12.533333333333333], [1.65203808E12, 12.1], [1.65203748E12, 12.766666666666667], [1.6520391E12, 12.366666666666667], [1.6520361E12, 12.7], [1.65203832E12, 12.933333333333334], [1.65203772E12, 12.366666666666667], [1.6520373E12, 12.416666666666666], [1.6520367E12, 10.666666666666666], [1.65203892E12, 10.216666666666667], [1.65203784E12, 12.6], [1.65203724E12, 12.166666666666666], [1.65203886E12, 12.383333333333333], [1.65203682E12, 12.516666666666667], [1.65203904E12, 12.116666666666667], [1.65203622E12, 10.266666666666667], [1.65203844E12, 10.25], [1.65203706E12, 12.25], [1.65203646E12, 12.683333333333334], [1.65203868E12, 12.183333333333334], [1.65203664E12, 10.066666666666666], [1.65203826E12, 12.7], [1.65203604E12, 12.5], [1.65203562E12, 12.916666666666666], [1.65203766E12, 12.483333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65203916E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.4, "minX": 1.65203556E12, "maxY": 6.666666666666667, "series": [{"data": [[1.65203658E12, 6.266666666666667], [1.6520388E12, 6.366666666666666], [1.65203598E12, 6.25], [1.6520382E12, 6.133333333333334], [1.65203616E12, 5.25], [1.65203778E12, 6.333333333333333], [1.65203718E12, 5.266666666666667], [1.6520364E12, 6.25], [1.65203802E12, 4.933333333333334], [1.65203556E12, 6.666666666666667], [1.6520358E12, 5.9], [1.65203742E12, 6.35], [1.6520376E12, 5.366666666666666], [1.65203862E12, 6.566666666666666], [1.652037E12, 6.15], [1.65203592E12, 6.333333333333333], [1.65203754E12, 5.766666666666667], [1.65203694E12, 6.35], [1.65203916E12, 3.55], [1.65203874E12, 6.416666666666667], [1.65203712E12, 5.233333333333333], [1.65203652E12, 6.1], [1.65203814E12, 6.283333333333333], [1.65203736E12, 6.283333333333333], [1.65203898E12, 5.45], [1.65203838E12, 6.25], [1.65203676E12, 6.283333333333333], [1.65203634E12, 6.25], [1.65203856E12, 6.266666666666667], [1.65203574E12, 5.983333333333333], [1.65203796E12, 5.65], [1.6520385E12, 5.1], [1.65203688E12, 6.366666666666666], [1.65203628E12, 6.066666666666666], [1.6520379E12, 6.166666666666667], [1.65203568E12, 6.2], [1.65203586E12, 6.233333333333333], [1.65203808E12, 6.033333333333333], [1.65203748E12, 6.4], [1.6520391E12, 6.166666666666667], [1.6520361E12, 6.366666666666666], [1.65203832E12, 6.516666666666667], [1.65203772E12, 6.216666666666667], [1.6520373E12, 6.183333333333334], [1.6520367E12, 5.333333333333333], [1.65203892E12, 5.133333333333334], [1.65203784E12, 6.316666666666666], [1.65203724E12, 6.05], [1.65203886E12, 6.183333333333334], [1.65203682E12, 6.25], [1.65203904E12, 6.016666666666667], [1.65203622E12, 5.15], [1.65203844E12, 5.1], [1.65203706E12, 6.116666666666666], [1.65203646E12, 6.316666666666666], [1.65203868E12, 6.016666666666667], [1.65203664E12, 5.066666666666666], [1.65203826E12, 6.316666666666666], [1.65203604E12, 6.233333333333333], [1.65203562E12, 6.466666666666667], [1.65203766E12, 6.216666666666667]], "isOverall": false, "label": "POST Login-success", "isController": false}, {"data": [[1.65203658E12, 6.266666666666667], [1.6520388E12, 6.333333333333333], [1.65203598E12, 6.266666666666667], [1.6520382E12, 6.05], [1.65203616E12, 5.283333333333333], [1.65203778E12, 6.35], [1.65203718E12, 5.216666666666667], [1.6520364E12, 6.183333333333334], [1.65203802E12, 4.983333333333333], [1.65203556E12, 3.4], [1.6520358E12, 5.866666666666666], [1.65203742E12, 6.35], [1.6520376E12, 5.4], [1.65203862E12, 6.516666666666667], [1.652037E12, 6.15], [1.65203592E12, 6.25], [1.65203754E12, 5.75], [1.65203694E12, 6.35], [1.65203916E12, 6.65], [1.65203874E12, 6.35], [1.65203712E12, 5.2], [1.65203652E12, 6.1], [1.65203814E12, 6.35], [1.65203736E12, 6.233333333333333], [1.65203898E12, 5.45], [1.65203838E12, 6.233333333333333], [1.65203676E12, 6.266666666666667], [1.65203634E12, 6.316666666666666], [1.65203856E12, 6.266666666666667], [1.65203574E12, 5.983333333333333], [1.65203796E12, 5.5], [1.6520385E12, 5.1], [1.65203688E12, 6.366666666666666], [1.65203628E12, 6.116666666666666], [1.6520379E12, 6.3], [1.65203568E12, 6.25], [1.65203586E12, 6.3], [1.65203808E12, 6.066666666666666], [1.65203748E12, 6.366666666666666], [1.6520391E12, 6.2], [1.6520361E12, 6.333333333333333], [1.65203832E12, 6.416666666666667], [1.65203772E12, 6.15], [1.6520373E12, 6.233333333333333], [1.6520367E12, 5.333333333333333], [1.65203892E12, 5.083333333333333], [1.65203784E12, 6.283333333333333], [1.65203724E12, 6.116666666666666], [1.65203886E12, 6.2], [1.65203682E12, 6.266666666666667], [1.65203904E12, 6.1], [1.65203622E12, 5.116666666666666], [1.65203844E12, 5.15], [1.65203706E12, 6.133333333333334], [1.65203646E12, 6.366666666666666], [1.65203868E12, 6.166666666666667], [1.65203664E12, 5.0], [1.65203826E12, 6.383333333333334], [1.65203604E12, 6.266666666666667], [1.65203562E12, 6.45], [1.65203766E12, 6.266666666666667]], "isOverall": false, "label": "/api/v3/shifts/availablev3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65203916E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.916666666666666, "minX": 1.65203556E12, "maxY": 13.083333333333334, "series": [{"data": [[1.65203658E12, 12.533333333333333], [1.6520388E12, 12.7], [1.65203598E12, 12.516666666666667], [1.6520382E12, 12.183333333333334], [1.65203616E12, 10.533333333333333], [1.65203778E12, 12.683333333333334], [1.65203718E12, 10.483333333333333], [1.6520364E12, 12.433333333333334], [1.65203802E12, 9.916666666666666], [1.65203556E12, 10.066666666666666], [1.6520358E12, 11.766666666666667], [1.65203742E12, 12.7], [1.6520376E12, 10.766666666666667], [1.65203862E12, 13.083333333333334], [1.652037E12, 12.3], [1.65203592E12, 12.583333333333334], [1.65203754E12, 11.516666666666667], [1.65203694E12, 12.7], [1.65203916E12, 10.2], [1.65203874E12, 12.766666666666667], [1.65203712E12, 10.433333333333334], [1.65203652E12, 12.2], [1.65203814E12, 12.633333333333333], [1.65203736E12, 12.516666666666667], [1.65203898E12, 10.9], [1.65203838E12, 12.483333333333333], [1.65203676E12, 12.55], [1.65203634E12, 12.566666666666666], [1.65203856E12, 12.533333333333333], [1.65203574E12, 11.966666666666667], [1.65203796E12, 11.15], [1.6520385E12, 10.2], [1.65203688E12, 12.733333333333333], [1.65203628E12, 12.183333333333334], [1.6520379E12, 12.466666666666667], [1.65203568E12, 12.45], [1.65203586E12, 12.533333333333333], [1.65203808E12, 12.1], [1.65203748E12, 12.766666666666667], [1.6520391E12, 12.366666666666667], [1.6520361E12, 12.7], [1.65203832E12, 12.933333333333334], [1.65203772E12, 12.366666666666667], [1.6520373E12, 12.416666666666666], [1.6520367E12, 10.666666666666666], [1.65203892E12, 10.216666666666667], [1.65203784E12, 12.6], [1.65203724E12, 12.166666666666666], [1.65203886E12, 12.383333333333333], [1.65203682E12, 12.516666666666667], [1.65203904E12, 12.116666666666667], [1.65203622E12, 10.266666666666667], [1.65203844E12, 10.25], [1.65203706E12, 12.25], [1.65203646E12, 12.683333333333334], [1.65203868E12, 12.183333333333334], [1.65203664E12, 10.066666666666666], [1.65203826E12, 12.7], [1.65203604E12, 12.5], [1.65203562E12, 12.916666666666666], [1.65203766E12, 12.483333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65203916E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

